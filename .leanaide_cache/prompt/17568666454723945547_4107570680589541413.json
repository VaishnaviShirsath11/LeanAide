[["an arrow ",{"type":"{V : Type u} → [inst : Quiver V] → (self : Quiver.Total V) → self.left ⟶ self.right","name":"Quiver.Total.hom","isProp":false,"docString":"an arrow ","distance":0.3892659957624886590821233767201192677021026611328125}],[" For any measure space with measurable space and measure, and two functions from to the extended nonnegative real numbers with being almost everywhere less than or equal to almost everywhere measurable g, the integral of f with respect to μ and ε times the measure of {x | f(x) + ε < g(x)} is less than or equal to the integral of g with respect to μ.",{"type":"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f g : α → ENNReal},\n  μ.ae.EventuallyLE f g →\n    AEMeasurable g μ → ∀ (ε : ENNReal), ∫⁻ (a : α), f a ∂μ + ε * ↑↑μ {x | f x + ε ≤ g x} ≤ ∫⁻ (a : α), g a ∂μ","name":"MeasureTheory.lintegral_add_mul_meas_add_le_le_lintegral","isProp":true,"docString":" For any measure space with measurable space and measure, and two functions from to the extended nonnegative real numbers with being almost everywhere less than or equal to almost everywhere measurable g, the integral of f with respect to μ and ε times the measure of {x | f(x) + ε < g(x)} is less than or equal to the integral of g with respect to μ.","distance":0.510951640373491056124066744814626872539520263671875}],["This theorem states that for all real numbers 'a' and 'b' and for all functions 'f' and 'g' from the real numbers to a normed space 'E', if almost everywhere with respect to a given measure 'μ', 'f' and 'g' are equal on the interval from 'a' to 'b', then the interval integrals of 'f' and 'g' over that interval with respect to 'μ' are equal. This is a statement about the equality of integrals under the condition of almost everywhere equality of the functions being integrated.",{"type":"∀ {E : Type u_3} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {a b : ℝ} {f g : ℝ → E}\n  {μ : MeasureTheory.Measure ℝ},\n  (∀ᵐ (x : ℝ) ∂μ, x ∈ Ι a b → f x = g x) → ∫ (x : ℝ) in a..b, f x ∂μ = ∫ (x : ℝ) in a..b, g x ∂μ","name":"intervalIntegral.integral_congr_ae","isProp":true,"docString":"This theorem states that for all real numbers 'a' and 'b' and for all functions 'f' and 'g' from the real numbers to a normed space 'E', if almost everywhere with respect to a given measure 'μ', 'f' and 'g' are equal on the interval from 'a' to 'b', then the interval integrals of 'f' and 'g' over that interval with respect to 'μ' are equal. This is a statement about the equality of integrals under the condition of almost everywhere equality of the functions being integrated.","distance":0.48761823254930825033426344816689379513263702392578125}],["The gcongr widget. ",{"type":"ProofWidgets.Component SelectInsertParams","name":"GCongrSelectionPanel","isProp":false,"docString":"The gcongr widget. ","distance":0.409725724029129712011609854016569443047046661376953125}],[" If a strongly measurable and integrable real-valued function on a measurable space is non-negative almost everywhere with respect to the measure, then it is almost everywhere greater than or equal to zero.",{"type":"∀ {α : Type u_1} {m0 : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : α → ℝ},\n  MeasureTheory.StronglyMeasurable f →\n    MeasureTheory.Integrable f μ →\n      (∀ (s : Set α), MeasurableSet s → ↑↑μ s < ⊤ → 0 ≤ ∫ (x : α) in s, f x ∂μ) → μ.ae.EventuallyLE 0 f","name":"MeasureTheory.ae_nonneg_of_forall_set_integral_nonneg_of_stronglyMeasurable","isProp":true,"docString":" If a strongly measurable and integrable real-valued function on a measurable space is non-negative almost everywhere with respect to the measure, then it is almost everywhere greater than or equal to zero.","distance":0.5215008104326936955175142429652623832225799560546875}],["This theorem states that the Grundy value (which is a concept related to game theory, specifically impartial games) of the sum of two Nim games (where each game has a pile of stones, and players take turns removing a positive number of stones from the pile), where each game has a natural number of piles, is equal to the bitwise XOR of the number of piles in the two games. In other words, given two natural numbers 'n' and 'm' that represent the number of piles in two Nim games, the Grundy value of the game that results from adding these two games together is equal to the natural number that results from applying the bitwise XOR operation to 'n' and 'm'.",{"type":"∀ (n m : ℕ), (SetTheory.PGame.nim ↑n + SetTheory.PGame.nim ↑m).grundyValue = ↑(n ^^^ m)","name":"SetTheory.PGame.grundyValue_nim_add_nim","isProp":true,"docString":"This theorem states that the Grundy value (which is a concept related to game theory, specifically impartial games) of the sum of two Nim games (where each game has a pile of stones, and players take turns removing a positive number of stones from the pile), where each game has a natural number of piles, is equal to the bitwise XOR of the number of piles in the two games. In other words, given two natural numbers 'n' and 'm' that represent the number of piles in two Nim games, the Grundy value of the game that results from adding these two games together is equal to the natural number that results from applying the bitwise XOR operation to 'n' and 'm'.","distance":0.490280239157993291687631653985590673983097076416015625}],["The element of G ",{"type":"{N : Type u_1} → {G : Type u_2} → [inst : Group N] → [inst_1 : Group G] → {φ : G →* MulAut N} → N ⋊[φ] G → G","name":"SemidirectProduct.right","isProp":false,"docString":"The element of G ","distance":0.410156846098519267673765398285468108952045440673828125}],["the first row ",{"type":"{C : Type u_1} →\n  [inst : CategoryTheory.Category.{u_2, u_1} C] →\n    [inst_1 : CategoryTheory.Abelian C] → CategoryTheory.ShortComplex.SnakeInput C → CategoryTheory.ShortComplex C","name":"CategoryTheory.ShortComplex.SnakeInput.L₁","isProp":false,"docString":"the first row ","distance":0.4101971481563781996015904951491393148899078369140625}],["The set of good products. ",{"type":"{I : Type u} → [inst : LinearOrder I] → Set (I → Bool) → Set (Profinite.NobelingProof.Products I)","name":"Profinite.NobelingProof.GoodProducts","isProp":false,"docString":"The set of good products. ","distance":0.413014815532009305076854843719047494232654571533203125}],["The congrm widget. ",{"type":"ProofWidgets.Component SelectInsertParams","name":"CongrmSelectionPanel","isProp":false,"docString":"The congrm widget. ","distance":0.414992795845790463094004962840699590742588043212890625}],["The positive part function. ",{"type":"Lean.TrailingParserDescr","name":"«term_⁺»","isProp":false,"docString":"The positive part function. ","distance":0.416382510257612692416984145893366076052188873291015625}],["the third row ",{"type":"{C : Type u_1} →\n  [inst : CategoryTheory.Category.{u_2, u_1} C] →\n    [inst_1 : CategoryTheory.Abelian C] → CategoryTheory.ShortComplex.SnakeInput C → CategoryTheory.ShortComplex C","name":"CategoryTheory.ShortComplex.SnakeInput.L₃","isProp":false,"docString":"the third row ","distance":0.4169241659678213363093846055562607944011688232421875}],["tensorator ",{"type":"{C : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} C] →\n    [inst_1 : CategoryTheory.MonoidalCategory C] →\n      {D : Type u₂} →\n        [inst_2 : CategoryTheory.Category.{v₂, u₂} D] →\n          [inst_3 : CategoryTheory.MonoidalCategory D] →\n            {F : C → D} →\n              [inst_4 : CategoryTheory.Functorial F] →\n                [self : CategoryTheory.LaxMonoidal F] →\n                  (X Y : C) →\n                    CategoryTheory.MonoidalCategory.tensorObj (F X) (F Y) ⟶\n                      F (CategoryTheory.MonoidalCategory.tensorObj X Y)","name":"CategoryTheory.LaxMonoidal.μ","isProp":false,"docString":"tensorator ","distance":0.417176979427275274048270148341543972492218017578125}],["Evaluation of good products. ",{"type":"{I : Type u} →\n  [inst : LinearOrder I] →\n    (C : Set (I → Bool)) → { l // Profinite.NobelingProof.Products.isGood C l } → LocallyConstant ↑C ℤ","name":"Profinite.NobelingProof.GoodProducts.eval","isProp":false,"docString":"Evaluation of good products. ","distance":0.419321936711699316813195537179126404225826263427734375}],["The empty finset ",{"type":"{α : Type u_1} → Finset α","name":"Finset.empty","isProp":false,"docString":"The empty finset ","distance":0.42180756730231705464717606446356512606143951416015625}],["the second row ",{"type":"{C : Type u_1} →\n  [inst : CategoryTheory.Category.{u_2, u_1} C] →\n    [inst_1 : CategoryTheory.Abelian C] → CategoryTheory.ShortComplex.SnakeInput C → CategoryTheory.ShortComplex C","name":"CategoryTheory.ShortComplex.SnakeInput.L₂","isProp":false,"docString":"the second row ","distance":0.422227895178012346821816436204244382679462432861328125}],["The supremum is continuous ",{"type":"∀ {L : Type u_1} [inst : TopologicalSpace L] [inst_1 : Sup L] [self : ContinuousSup L], Continuous fun p => p.1 ⊔ p.2","name":"ContinuousSup.continuous_sup","isProp":true,"docString":"The supremum is continuous ","distance":0.422471295191551743375413252579164691269397735595703125}],["There is a splitting ",{"type":"∀ {C : Type u₁} [inst : CategoryTheory.Category.{v₁, u₁} C] {X Y : C} {f : X ⟶ Y} [self : CategoryTheory.IsSplitEpi f],\n  Nonempty (CategoryTheory.SplitEpi f)","name":"CategoryTheory.IsSplitEpi.exists_splitEpi","isProp":true,"docString":"There is a splitting ","distance":0.423375302536474762415963368766824714839458465576171875}],["The supremum of the principal segment ",{"type":"{α : Type u_4} → {β : Type u_5} → {r : α → α → Prop} → {s : β → β → Prop} → r ≺i s → β","name":"PrincipalSeg.top","isProp":false,"docString":"The supremum of the principal segment ","distance":0.4246715995707794899516329678590409457683563232421875}],["The empty set is meagre. ",{"type":"∀ {X : Type u_5} [inst : TopologicalSpace X], IsMeagre ∅","name":"meagre_empty","isProp":true,"docString":"The empty set is meagre. ","distance":0.425838967094912035360465552003006450831890106201171875}],["the distinguished element ",{"type":"(self : Pointed) → self.X","name":"Pointed.point","isProp":false,"docString":"the distinguished element ","distance":0.4258845231956678301088459193124435842037200927734375}],["Finitely supported product of finsets. ",{"type":"{ι : Type u_1} → {α : Type u_2} → [inst : Zero α] → Finset ι → (ι → Finset α) → Finset (ι →₀ α)","name":"Finset.finsupp","isProp":false,"docString":"Finitely supported product of finsets. ","distance":0.42667368946537453933132155725616030395030975341796875}],["Real part ",{"type":"UpperHalfPlane → ℝ","name":"UpperHalfPlane.re","isProp":false,"docString":"Real part ","distance":0.4291776815140979639551233049132861196994781494140625}],["a first integer ",{"type":"{n : ℤ} → CochainComplex.HomComplex.Triplet n → ℤ","name":"CochainComplex.HomComplex.Triplet.p","isProp":false,"docString":"a first integer ","distance":0.429982889644961840946990605516475625336170196533203125}]]