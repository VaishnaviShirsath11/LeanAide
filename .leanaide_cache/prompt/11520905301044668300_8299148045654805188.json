[["There exists infinitely many deficient numbers ",{"type":"{n | n.Deficient}.Infinite","name":"Nat.infinite_deficient","isProp":true,"docString":"There exists infinitely many deficient numbers ","distance":0.6218227392720663271319381237844936549663543701171875}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.","distance":0.58849365495009975379758770941407419741153717041015625}],["This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","distance":0.702705137540742708068819410982541739940643310546875}],["Any infinite set of naturals is denumerable. ",{"type":"(s : Set ℕ) → [inst : DecidablePred fun x => x ∈ s] → [inst : Infinite ↑s] → Denumerable ↑s","name":"Nat.Subtype.denumerable","isProp":false,"docString":"Any infinite set of naturals is denumerable. ","distance":0.71024842283278832866244556498713791370391845703125}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.59133839542892430163334438475430943071842193603515625}],["This theorem states that for all natural numbers `n`, `n` is odd if and only if it is not even. In the context of a semiring, a number `n` is odd if there exists another number `k` such that `n` equals `2*k + 1`. On the other hand, a number `n` is even if there exists a number `r` such that `n` equals `r + r`. Therefore, this theorem establishes the mutually exclusive and exhaustive nature of odd and even numbers in the set of natural numbers.",{"type":"∀ {α : Sort u_1} {a b : α}, (a = b) = (b = a)","name":"Mathlib.Data.Nat.Parity._auxLemma.4","isProp":true,"docString":"This theorem states that for all natural numbers `n`, `n` is odd if and only if it is not even. In the context of a semiring, a number `n` is odd if there exists another number `k` such that `n` equals `2*k + 1`. On the other hand, a number `n` is even if there exists a number `r` such that `n` equals `r + r`. Therefore, this theorem establishes the mutually exclusive and exhaustive nature of odd and even numbers in the set of natural numbers.","distance":0.741275732946292453817704881657846271991729736328125}],["The infinite monadic lazy list of natural numbers.",{"type":"{m : Type → Type} → [inst : Monad m] → MLList m ℕ","name":"MLList.range","isProp":false,"docString":"The infinite monadic lazy list of natural numbers.","distance":0.7108000402408307660806485728244297206401824951171875}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.7125468115971951288400987323257140815258026123046875}],["Type of natural numbers with infinity (`⊤`) ",{"type":"Type","name":"PartENat","isProp":false,"docString":"Type of natural numbers with infinity (`⊤`) ","distance":0.7362814776735218114112058174214325845241546630859375}],["Infinitely many natural numbers are equal to `d` mod `n`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]","name":"Nat.frequently_modEq","isProp":true,"docString":"Infinitely many natural numbers are equal to `d` mod `n`. ","distance":0.80872595064151109323091759506496600806713104248046875}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.8220791693488209705975577890058048069477081298828125}],["Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ",{"type":"{P : ℕ → Sort u_1} →\n  ((n : ℕ) → ((k : ℕ) → k < 2 * n → P k) → P (2 * n)) →\n    ((n : ℕ) → ((k : ℕ) → k < 2 * n + 1 → P k) → P (2 * n + 1)) → (n : ℕ) → P n","name":"Nat.evenOddStrongRec","isProp":false,"docString":"Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ","distance":0.82653353405241947182702233476447872817516326904296875}],["In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ",{"type":"∀ {n : ℕ} [inst : NeZero n] {k : Fin n}, Odd k ↔ Odd n ∨ Odd ↑k","name":"Fin.odd_iff","isProp":true,"docString":"In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ","distance":0.83341549952467930406641016816138289868831634521484375}],["The L-function of an odd function vanishes at negative odd integers. ",{"type":"∀ {N : ℕ} [inst : NeZero N] {Φ : ZMod N → ℂ}, Function.Odd Φ → ∀ (n : ℕ), ZMod.LFunction Φ (-(2 * ↑n) - 1) = 0","name":"ZMod.LFunction_neg_two_mul_nat_sub_one","isProp":true,"docString":"The L-function of an odd function vanishes at negative odd integers. ","distance":0.83932384610061572249861683303606696426868438720703125}],["The zero function is odd. ",{"type":"∀ {α : Type u_1} {β : Type u_2} [inst : Neg α] [inst_1 : NegZeroClass β], Function.Odd fun x => 0","name":"Function.Odd.zero","isProp":true,"docString":"The zero function is odd. ","distance":0.84523598956728995812426319389487616717815399169921875}],["Any nonzero natural number is the product of an odd part `m` and a power of\ntwo `2 ^ k`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∃ k m, Odd m ∧ n = 2 ^ k * m","name":"Nat.exists_eq_two_pow_mul_odd","isProp":true,"docString":"Any nonzero natural number is the product of an odd part `m` and a power of\ntwo `2 ^ k`. ","distance":0.86788565260436045800673809935688041150569915771484375}],["The underlying natural number ",{"type":"ℕ+ → ℕ","name":"PNat.val","isProp":false,"docString":"The underlying natural number ","distance":0.87273733556494281771165333339013159275054931640625}],["`2` is not a factor of an odd natural number. ",{"type":"∀ {m n : ℕ}, Odd n → m ∣ n → m ≠ 2","name":"Odd.ne_two_of_dvd_nat","isProp":true,"docString":"`2` is not a factor of an odd natural number. ","distance":0.8911870325776050094646052457392215728759765625}],["**Bertrand's Postulate**: For any positive natural number, there is a prime which is greater than\nit, but no more than twice as large.\n",{"type":"∀ (n : ℕ), n ≠ 0 → ∃ p, Nat.Prime p ∧ n < p ∧ p ≤ 2 * n","name":"Nat.exists_prime_lt_and_le_two_mul","isProp":true,"docString":"**Bertrand's Postulate**: For any positive natural number, there is a prime which is greater than\nit, but no more than twice as large.\n","distance":0.8963648794782386186597022970090620219707489013671875}],["The order of the `0` power series is infinite. ",{"type":"∀ {R : Type u_1} [inst : Semiring R], PowerSeries.order 0 = ⊤","name":"PowerSeries.order_zero","isProp":true,"docString":"The order of the `0` power series is infinite. ","distance":0.897523572317947326837384025566279888153076171875}],["Extended natural numbers `ℕ∞ = WithTop ℕ`. ",{"type":"Lean.ParserDescr","name":"«termℕ∞»","isProp":false,"docString":"Extended natural numbers `ℕ∞ = WithTop ℕ`. ","distance":0.8976579449902268859062814954086206853389739990234375}],["If `a` is even, then `n` is odd iff `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Even a → (Odd (n % a) ↔ Odd n)","name":"Odd.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is odd iff `n % a` is odd. ","distance":0.906495559191408784016630306723527610301971435546875}],["The sum of the values of an odd function is 0. ",{"type":"∀ {α : Type u_3} {β : Type u_4} [inst : AddCommGroup β] [inst_1 : NoZeroSMulDivisors ℕ β] [inst_2 : Fintype α]\n  [inst_3 : InvolutiveNeg α] {f : α → β}, Function.Odd f → ∑ a : α, f a = 0","name":"Function.Odd.sum_eq_zero","isProp":true,"docString":"The sum of the values of an odd function is 0. ","distance":0.913068467231434421904623377486132085323333740234375}],["There are finitely many subsets of a given finite set ",{"type":"∀ {α : Type u} {a : Set α}, a.Finite → {b | b ⊆ a}.Finite","name":"Set.Finite.finite_subsets","isProp":true,"docString":"There are finitely many subsets of a given finite set ","distance":0.91954772246377969313613220947445370256900787353515625}]]