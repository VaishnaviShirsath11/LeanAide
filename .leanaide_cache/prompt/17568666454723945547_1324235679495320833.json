[["the distinguished element ",{"type":"(self : Pointed) → self.X","name":"Pointed.point","isProp":false,"docString":"the distinguished element ","distance":0.38345799461578422562268997353385202586650848388671875}],[" Every natural number is non-negative. (Or, every natural number is greater than or equal to zero.)",{"type":"∀ (n : ℕ), n = 0 ∨ n > 0","name":"Nat.eq_zero_or_pos","isProp":true,"docString":" Every natural number is non-negative. (Or, every natural number is greater than or equal to zero.)","distance":0.496441210868226623365018213007715530693531036376953125}],["This theorem states that the Grundy value (which is a concept related to game theory, specifically impartial games) of the sum of two Nim games (where each game has a pile of stones, and players take turns removing a positive number of stones from the pile), where each game has a natural number of piles, is equal to the bitwise XOR of the number of piles in the two games. In other words, given two natural numbers 'n' and 'm' that represent the number of piles in two Nim games, the Grundy value of the game that results from adding these two games together is equal to the natural number that results from applying the bitwise XOR operation to 'n' and 'm'.",{"type":"∀ (n m : ℕ), (SetTheory.PGame.nim ↑n + SetTheory.PGame.nim ↑m).grundyValue = ↑(n ^^^ m)","name":"SetTheory.PGame.grundyValue_nim_add_nim","isProp":true,"docString":"This theorem states that the Grundy value (which is a concept related to game theory, specifically impartial games) of the sum of two Nim games (where each game has a pile of stones, and players take turns removing a positive number of stones from the pile), where each game has a natural number of piles, is equal to the bitwise XOR of the number of piles in the two games. In other words, given two natural numbers 'n' and 'm' that represent the number of piles in two Nim games, the Grundy value of the game that results from adding these two games together is equal to the natural number that results from applying the bitwise XOR operation to 'n' and 'm'.","distance":0.47356121964117703360130917644710280001163482666015625}],["The distinguished infinite place. ",{"type":"{K : Type u_1} → [inst : Field K] → [inst_1 : NumberField K] → NumberField.InfinitePlace K","name":"NumberField.Units.dirichletUnitTheorem.w₀","isProp":false,"docString":"The distinguished infinite place. ","distance":0.389699768445141259132213917837361805140972137451171875}],[" For any measure space with measurable space and measure, and two functions from to the extended nonnegative real numbers with being almost everywhere less than or equal to almost everywhere measurable g, the integral of f with respect to μ and ε times the measure of {x | f(x) + ε < g(x)} is less than or equal to the integral of g with respect to μ.",{"type":"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f g : α → ENNReal},\n  μ.ae.EventuallyLE f g →\n    AEMeasurable g μ → ∀ (ε : ENNReal), ∫⁻ (a : α), f a ∂μ + ε * ↑↑μ {x | f x + ε ≤ g x} ≤ ∫⁻ (a : α), g a ∂μ","name":"MeasureTheory.lintegral_add_mul_meas_add_le_le_lintegral","isProp":true,"docString":" For any measure space with measurable space and measure, and two functions from to the extended nonnegative real numbers with being almost everywhere less than or equal to almost everywhere measurable g, the integral of f with respect to μ and ε times the measure of {x | f(x) + ε < g(x)} is less than or equal to the integral of g with respect to μ.","distance":0.50115952706318245279959455729112960398197174072265625}],["This theorem in set theory, specifically in the study of combinatorial games, states that for any impartial game `G` (a game where the allowable moves depend only on the position and not on which of the two players is currently moving), the Grundy value of `G` is equal to an ordinal `o` if and only if `G` is equivalent to a game of nim with `o` stones. Here equivalence means that the two games have the same outcome under optimal play. Nim is a particular type of game where players alternately take one or more stones from a single pile, with the player taking the last stone winning. The Grundy value of an impartial game is a kind of \"nim-value\" which measures how the game behaves under the mex (minimum excludant) operation.",{"type":"∀ {G : SetTheory.PGame} [inst : G.Impartial] {o : Ordinal.{u_1}}, G.grundyValue = o ↔ G ≈ SetTheory.PGame.nim o","name":"SetTheory.PGame.grundyValue_eq_iff_equiv_nim","isProp":true,"docString":"This theorem in set theory, specifically in the study of combinatorial games, states that for any impartial game `G` (a game where the allowable moves depend only on the position and not on which of the two players is currently moving), the Grundy value of `G` is equal to an ordinal `o` if and only if `G` is equivalent to a game of nim with `o` stones. Here equivalence means that the two games have the same outcome under optimal play. Nim is a particular type of game where players alternately take one or more stones from a single pile, with the player taking the last stone winning. The Grundy value of an impartial game is a kind of \"nim-value\" which measures how the game behaves under the mex (minimum excludant) operation.","distance":0.48429540791005420974357775776297785341739654541015625}],["compatibility with the distinguished points ",{"type":"∀ {X Y : Pointed} (self : Pointed.Hom X Y), Pointed.Hom.toFun self X.point = Y.point","name":"Pointed.Hom.map_point","isProp":true,"docString":"compatibility with the distinguished points ","distance":0.398298739980429417073537479154765605926513671875}],["The positive part function. ",{"type":"Lean.TrailingParserDescr","name":"«term_⁺»","isProp":false,"docString":"The positive part function. ","distance":0.402887455542267403085787691452424041926860809326171875}],["tensorator ",{"type":"{C : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} C] →\n    [inst_1 : CategoryTheory.MonoidalCategory C] →\n      {D : Type u₂} →\n        [inst_2 : CategoryTheory.Category.{v₂, u₂} D] →\n          [inst_3 : CategoryTheory.MonoidalCategory D] →\n            {F : C → D} →\n              [inst_4 : CategoryTheory.Functorial F] →\n                [self : CategoryTheory.LaxMonoidal F] →\n                  (X Y : C) →\n                    CategoryTheory.MonoidalCategory.tensorObj (F X) (F Y) ⟶\n                      F (CategoryTheory.MonoidalCategory.tensorObj X Y)","name":"CategoryTheory.LaxMonoidal.μ","isProp":false,"docString":"tensorator ","distance":0.403878075776177514200071527739055454730987548828125}],["The grading function. ",{"type":"{𝕆 : Type u_5} → {α : Type u_6} → [inst : Preorder 𝕆] → [inst_1 : Preorder α] → [self : GradeOrder 𝕆 α] → α → 𝕆","name":"GradeOrder.grade","isProp":false,"docString":"The grading function. ","distance":0.406952005405687600170239193175802938640117645263671875}],["an arrow ",{"type":"{V : Type u} → [inst : Quiver V] → (self : Quiver.Total V) → self.left ⟶ self.right","name":"Quiver.Total.hom","isProp":false,"docString":"an arrow ","distance":0.408462405609501200132172016310505568981170654296875}],["The set of good products. ",{"type":"{I : Type u} → [inst : LinearOrder I] → Set (I → Bool) → Set (Profinite.NobelingProof.Products I)","name":"Profinite.NobelingProof.GoodProducts","isProp":false,"docString":"The set of good products. ","distance":0.40983582436448051655730751008377410471439361572265625}],["The empty finset ",{"type":"{α : Type u_1} → Finset α","name":"Finset.empty","isProp":false,"docString":"The empty finset ","distance":0.4102528875636715088859318711911328136920928955078125}],["Evaluation of good products. ",{"type":"{I : Type u} →\n  [inst : LinearOrder I] →\n    (C : Set (I → Bool)) → { l // Profinite.NobelingProof.Products.isGood C l } → LocallyConstant ↑C ℤ","name":"Profinite.NobelingProof.GoodProducts.eval","isProp":false,"docString":"Evaluation of good products. ","distance":0.412985355284395172503764115390367805957794189453125}],["A choice of wide pushout. ",{"type":"{J : Type w} →\n  {C : Type u} →\n    [inst : CategoryTheory.Category.{v, u} C] →\n      (B : C) →\n        (objs : J → C) →\n          (arrows : (j : J) → B ⟶ objs j) → [inst : CategoryTheory.Limits.HasWidePushout B objs arrows] → C","name":"CategoryTheory.Limits.widePushout","isProp":false,"docString":"A choice of wide pushout. ","distance":0.413026163889637587534053864146699197590351104736328125}],["One has grade zero ",{"type":"∀ {ι : Type u_1} {R : Type u_2} {S : Type u_3} [inst : SetLike S R] [inst_1 : One R] [inst_2 : Zero ι] {A : ι → S}\n  [self : SetLike.GradedOne A], 1 ∈ A 0","name":"SetLike.GradedOne.one_mem","isProp":true,"docString":"One has grade zero ","distance":0.413645065242797815852071607878315262496471405029296875}],["The completion is complete. ",{"type":"∀ {α : Type u} [inst : UniformSpace α] (self : AbstractCompletion α), CompleteSpace self.space","name":"AbstractCompletion.complete","isProp":true,"docString":"The completion is complete. ","distance":0.4160426085675068552660604837001301348209381103515625}],["The empty word ",{"type":"{G : Type u_1} →\n  [inst : Group G] →\n    {A B : Subgroup G} → {d : HNNExtension.NormalWord.TransversalPair G A B} → HNNExtension.NormalWord d","name":"HNNExtension.NormalWord.empty","isProp":false,"docString":"The empty word ","distance":0.417360904597417092798394833152997307479381561279296875}],["The evaluation natural transformation. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    [inst_1 : CategoryTheory.MonoidalCategory C] →\n      (A : C) →\n        [inst_2 : CategoryTheory.Closed A] →\n          CategoryTheory.Functor.comp (CategoryTheory.ihom A) (CategoryTheory.MonoidalCategory.tensorLeft A) ⟶\n            CategoryTheory.Functor.id C","name":"CategoryTheory.ihom.ev","isProp":false,"docString":"The evaluation natural transformation. ","distance":0.417592851090860806007043493082164786756038665771484375}],["The coevaluation natural transformation. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    [inst_1 : CategoryTheory.MonoidalCategory C] →\n      (A : C) →\n        [inst_2 : CategoryTheory.Closed A] →\n          CategoryTheory.Functor.id C ⟶\n            CategoryTheory.Functor.comp (CategoryTheory.MonoidalCategory.tensorLeft A) (CategoryTheory.ihom A)","name":"CategoryTheory.ihom.coev","isProp":false,"docString":"The coevaluation natural transformation. ","distance":0.4199548082560349282488232347532175481319427490234375}],["The element of G ",{"type":"{N : Type u_1} → {G : Type u_2} → [inst : Group N] → [inst_1 : Group G] → {φ : G →* MulAut N} → N ⋊[φ] G → G","name":"SemidirectProduct.right","isProp":false,"docString":"The element of G ","distance":0.420081948370146618376708147479803301393985748291015625}],["The program. ",{"type":"{Γ : Type u_1} →\n  {Λ : Type u_2} →\n    [inst : Inhabited Λ] → Turing.TM0.Machine Γ Λ → Turing.TM0to1.Λ' → Turing.TM1.Stmt Γ Turing.TM0to1.Λ' Unit","name":"Turing.TM0to1.tr","isProp":false,"docString":"The program. ","distance":0.421094642394162332887930233482620678842067718505859375}],["Head term ",{"type":"{α : Type u_1} → GeneralizedContinuedFraction α → α","name":"GeneralizedContinuedFraction.h","isProp":false,"docString":"Head term ","distance":0.423187921062308236574978081989684142172336578369140625}],["Starting state. ",{"type":"{α : Type u} → {σ : Type v} → DFA α σ → σ","name":"DFA.start","isProp":false,"docString":"Starting state. ","distance":0.423924204234909562938327098891022615134716033935546875}]]