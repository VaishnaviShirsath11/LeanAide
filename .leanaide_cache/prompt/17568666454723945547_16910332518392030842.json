[["If there is a primitive `n`-th root of unity in `K`, then `cyclotomic' n K` comes from a\nmonic polynomial with integer coefficients. ",{"type":"∀ {K : Type u_2} [inst : CommRing K] [inst_1 : IsDomain K] {ζ : K} {n : ℕ},\n  IsPrimitiveRoot ζ n →\n    ∃ P,\n      Polynomial.map (Int.castRingHom K) P = Polynomial.cyclotomic' n K ∧\n        Polynomial.degree P = Polynomial.degree (Polynomial.cyclotomic' n K) ∧ Polynomial.Monic P","name":"Polynomial.int_coeff_of_cyclotomic'","isProp":true,"docString":"If there is a primitive `n`-th root of unity in `K`, then `cyclotomic' n K` comes from a\nmonic polynomial with integer coefficients. ","distance":0.2761937929267548330614090446033515036106109619140625}],[" For any natural number $n \\neq 0$, the complex number $\\exp\\left(\\frac{2\\pi i}{n}\\right)$ is a primitive $n$th root of unity.",{"type":"∀ (n : ℕ), n ≠ 0 → IsPrimitiveRoot (2 * ↑Real.pi * Complex.I / ↑n).exp n","name":"Complex.isPrimitiveRoot_exp","isProp":true,"docString":" For any natural number $n \\neq 0$, the complex number $\\exp\\left(\\frac{2\\pi i}{n}\\right)$ is a primitive $n$th root of unity.","distance":0.288172794327570980232877673188340850174427032470703125}],["This theorem states that for any two given integers `n₁` and `n₂`, the power of negative one to the sum of these integers is equal to the product of the power of negative one to `n₁` and the power of negative one to `n₂`. In mathematical terms, this theorem establishes that $(-1)^{n₁ + n₂} = (-1)^{n₁} * (-1)^{n₂}$.",{"type":"∀ (n₁ n₂ : ℤ), (n₁ + n₂).negOnePow = n₁.negOnePow * n₂.negOnePow","name":"Int.negOnePow_add","isProp":true,"docString":"This theorem states that for any two given integers `n₁` and `n₂`, the power of negative one to the sum of these integers is equal to the product of the power of negative one to `n₁` and the power of negative one to `n₂`. In mathematical terms, this theorem establishes that $(-1)^{n₁ + n₂} = (-1)^{n₁} * (-1)^{n₂}$.","distance":0.269571718577407526407085924802231602370738983154296875}],["The minimal polynomial of a root of unity `μ` divides `X ^ n - 1`. ",{"type":"∀ {n : ℕ} {K : Type u_1} [inst : CommRing K] {μ : K},\n  IsPrimitiveRoot μ n → ∀ [inst_1 : IsDomain K] [inst_2 : CharZero K], minpoly ℤ μ ∣ Polynomial.X ^ n - 1","name":"IsPrimitiveRoot.minpoly_dvd_x_pow_sub_one","isProp":true,"docString":"The minimal polynomial of a root of unity `μ` divides `X ^ n - 1`. ","distance":0.291035178475438194301005978559260256588459014892578125}],[" For a positive integer n and a nonzero complex number x, x is an n-th root of unity if and only if there exists an integer i < n such that x = exp(2πiI/n).",{"type":"∀ (n : ℕ+) (x : ℂˣ), x ∈ rootsOfUnity n ℂ ↔ ∃ i < ↑n, (2 * ↑Real.pi * Complex.I * (↑i / ↑↑n)).exp = ↑x","name":"Complex.mem_rootsOfUnity","isProp":true,"docString":" For a positive integer n and a nonzero complex number x, x is an n-th root of unity if and only if there exists an integer i < n such that x = exp(2πiI/n).","distance":0.3011828427592389001432593431673012673854827880859375}],["This theorem states that if there exists a primitive n-th root of unity in a commutative ring domain K, then the product of the modified cyclotomic polynomials of the divisors of n, with coefficients in K, equals the polynomial X raised to the power n minus 1. Here, X is the polynomial variable or indeterminate, and a primitive n-th root of unity is an element that, when raised to the n-th power, gives 1, but does not give 1 for any positive integer power less than n. In other words, the equation `∏ i in Nat.divisors n, cyclotomic' i K = X ^ n - 1` holds true.",{"type":"∀ {K : Type u_2} [inst : CommRing K] [inst_1 : IsDomain K] {ζ : K} {n : ℕ},\n  0 < n → IsPrimitiveRoot ζ n → (n.divisors.prod fun i => Polynomial.cyclotomic' i K) = Polynomial.X ^ n - 1","name":"Polynomial.prod_cyclotomic'_eq_X_pow_sub_one","isProp":true,"docString":"This theorem states that if there exists a primitive n-th root of unity in a commutative ring domain K, then the product of the modified cyclotomic polynomials of the divisors of n, with coefficients in K, equals the polynomial X raised to the power n minus 1. Here, X is the polynomial variable or indeterminate, and a primitive n-th root of unity is an element that, when raised to the n-th power, gives 1, but does not give 1 for any positive integer power less than n. In other words, the equation `∏ i in Nat.divisors n, cyclotomic' i K = X ^ n - 1` holds true.","distance":0.276248025352879011951046095418860204517841339111328125}],["The minimal polynomial of a primitive `n`-th root of unity `μ` divides `cyclotomic n ℤ`. ",{"type":"∀ {n : ℕ} {K : Type u_2} [inst : Field K] {μ : K},\n  IsPrimitiveRoot μ n → 0 < n → ∀ [inst_1 : CharZero K], minpoly ℤ μ ∣ Polynomial.cyclotomic n ℤ","name":"IsPrimitiveRoot.minpoly_dvd_cyclotomic","isProp":true,"docString":"The minimal polynomial of a primitive `n`-th root of unity `μ` divides `cyclotomic n ℤ`. ","distance":0.293135349149195312268290081192390061914920806884765625}],["The complex `n`-th roots of unity are exactly the\ncomplex numbers of the form `exp (2 * Real.pi * Complex.I * (i / n))` for some `i < n`. ",{"type":"∀ (n : ℕ+) (x : ℂˣ), x ∈ rootsOfUnity n ℂ ↔ ∃ i < ↑n, Complex.exp (2 * ↑Real.pi * Complex.I * (↑i / ↑↑n)) = ↑x","name":"Complex.mem_rootsOfUnity","isProp":true,"docString":"The complex `n`-th roots of unity are exactly the\ncomplex numbers of the form `exp (2 * Real.pi * Complex.I * (i / n))` for some `i < n`. ","distance":0.29338719209622043937457647189148701727390289306640625}],["The multiplicity of `a` as root of a nonzero polynomial `p` is at least `n` iff\n`(X - a) ^ n` divides `p`. ",{"type":"∀ {R : Type u} [inst : CommRing R] {p : Polynomial R},\n  p ≠ 0 → ∀ {a : R} {n : ℕ}, n ≤ Polynomial.rootMultiplicity a p ↔ (Polynomial.X - Polynomial.C a) ^ n ∣ p","name":"Polynomial.le_rootMultiplicity_iff","isProp":true,"docString":"The multiplicity of `a` as root of a nonzero polynomial `p` is at least `n` iff\n`(X - a) ^ n` divides `p`. ","distance":0.2961786234524919070310033930581994354724884033203125}],["If the natural number `n` is a sum of two squares of coprime natural numbers, then\n`-1` is a square modulo `n`. ",{"type":"∀ {n x y : ℕ}, n = x ^ 2 + y ^ 2 → Nat.Coprime x y → IsSquare (-1)","name":"ZMod.isSquare_neg_one_of_eq_sq_add_sq_of_coprime","isProp":true,"docString":"If the natural number `n` is a sum of two squares of coprime natural numbers, then\n`-1` is a square modulo `n`. ","distance":0.299347953394480281730238857562653720378875732421875}],["If there is a primitive `n`th root of unity in `K`, then `X ^ n - 1 = ∏ (X - μ)`, where `μ`\nvaries over the `n`-th roots of unity. ",{"type":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R} {n : ℕ},\n  0 < n →\n    IsPrimitiveRoot ζ n →\n      Polynomial.X ^ n - 1 = Finset.prod (Polynomial.nthRootsFinset n R) fun ζ => Polynomial.X - Polynomial.C ζ","name":"Polynomial.X_pow_sub_one_eq_prod","isProp":true,"docString":"If there is a primitive `n`th root of unity in `K`, then `X ^ n - 1 = ∏ (X - μ)`, where `μ`\nvaries over the `n`-th roots of unity. ","distance":0.29998084649620249120260950803640298545360565185546875}],["An algebraic integer whose conjugates are all of norm one is a root of unity. ",{"type":"∀ (K : Type u_1) [inst : Field K] [inst_1 : NumberField K] (A : Type u_2) [inst_2 : NormedField A]\n  [inst_3 : IsAlgClosed A] [inst_4 : NormedAlgebra ℚ A] {x : K},\n  IsIntegral ℤ x → (∀ (φ : K →+* A), ‖φ x‖ = 1) → ∃ n, ∃ (_ : 0 < n), x ^ n = 1","name":"NumberField.Embeddings.pow_eq_one_of_norm_eq_one","isProp":true,"docString":"An algebraic integer whose conjugates are all of norm one is a root of unity. ","distance":0.30070399652495083397951702863792888820171356201171875}],["If there is a primitive `n`-th root of unity in `K`, then\n`∏ i in Nat.divisors n, cyclotomic' i K = X ^ n - 1`. ",{"type":"∀ {K : Type u_2} [inst : CommRing K] [inst_1 : IsDomain K] {ζ : K} {n : ℕ},\n  0 < n →\n    IsPrimitiveRoot ζ n → (Finset.prod (Nat.divisors n) fun i => Polynomial.cyclotomic' i K) = Polynomial.X ^ n - 1","name":"Polynomial.prod_cyclotomic'_eq_X_pow_sub_one","isProp":true,"docString":"If there is a primitive `n`-th root of unity in `K`, then\n`∏ i in Nat.divisors n, cyclotomic' i K = X ^ n - 1`. ","distance":0.3053505257716719878402500398806296288967132568359375}],["If `p` is a prime that does not divide `n`,\nthen the minimal polynomials of a primitive `n`-th root of unity `μ`\nand of `μ ^ p` are the same. ",{"type":"∀ {n : ℕ} {K : Type u_1} [inst : CommRing K] {μ : K},\n  IsPrimitiveRoot μ n →\n    ∀ [inst_1 : IsDomain K] [inst_2 : CharZero K] {p : ℕ} [hprime : Fact (Nat.Prime p)],\n      ¬p ∣ n → minpoly ℤ μ = minpoly ℤ (μ ^ p)","name":"IsPrimitiveRoot.minpoly_eq_pow","isProp":true,"docString":"If `p` is a prime that does not divide `n`,\nthen the minimal polynomials of a primitive `n`-th root of unity `μ`\nand of `μ ^ p` are the same. ","distance":0.3086895890093652727870221497141756117343902587890625}],["If the integer `n` is a sum of two squares of coprime integers,\nthen `-1` is a square modulo `n`. ",{"type":"∀ {n x y : ℤ}, n = x ^ 2 + y ^ 2 → IsCoprime x y → IsSquare (-1)","name":"ZMod.isSquare_neg_one_of_eq_sq_add_sq_of_isCoprime","isProp":true,"docString":"If the integer `n` is a sum of two squares of coprime integers,\nthen `-1` is a square modulo `n`. ","distance":0.31420542356219571811237756264745257794857025146484375}],["If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. ",{"type":"∀ {n : ℕ}, IsSquare (-1) → ∃ x y, n = x ^ 2 + y ^ 2","name":"Nat.eq_sq_add_sq_of_isSquare_mod_neg_one","isProp":true,"docString":"If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. ","distance":0.314521895118448469030880687569151632487773895263671875}],["If there is a primitive `n`-th root of unity in `K`, then\n`cyclotomic' n K = (X ^ k - 1) /ₘ (∏ i in Nat.properDivisors k, cyclotomic' i K)`. ",{"type":"∀ {K : Type u_2} [inst : CommRing K] [inst_1 : IsDomain K] {ζ : K} {n : ℕ},\n  0 < n →\n    IsPrimitiveRoot ζ n →\n      Polynomial.cyclotomic' n K =\n        (Polynomial.X ^ n - 1) /ₘ Finset.prod (Nat.properDivisors n) fun i => Polynomial.cyclotomic' i K","name":"Polynomial.cyclotomic'_eq_X_pow_sub_one_div","isProp":true,"docString":"If there is a primitive `n`-th root of unity in `K`, then\n`cyclotomic' n K = (X ^ k - 1) /ₘ (∏ i in Nat.properDivisors k, cyclotomic' i K)`. ","distance":0.31779008938798913863621464770403690636157989501953125}],["The root of this polynomial determines the `n+1`st coefficient of our solution. ",{"type":"(p : ℕ) →\n  [hp : Fact (Nat.Prime p)] →\n    {k : Type u_1} →\n      [inst : CommRing k] →\n        [inst_1 : CharP k p] → (n : ℕ) → WittVector p k → WittVector p k → (Fin (n + 1) → k) → Polynomial k","name":"WittVector.RecursionMain.succNthDefiningPoly","isProp":false,"docString":"The root of this polynomial determines the `n+1`st coefficient of our solution. ","distance":0.31877764477290038147572204252355732023715972900390625}],["`cyclotomic n ℤ` is the minimal polynomial of a primitive `n`-th root of unity `μ`. ",{"type":"∀ {n : ℕ} {K : Type u_2} [inst : Field K] {μ : K},\n  IsPrimitiveRoot μ n → 0 < n → ∀ [inst_1 : CharZero K], Polynomial.cyclotomic n ℤ = minpoly ℤ μ","name":"Polynomial.cyclotomic_eq_minpoly","isProp":true,"docString":"`cyclotomic n ℤ` is the minimal polynomial of a primitive `n`-th root of unity `μ`. ","distance":0.318959511265766215704076103065744973719120025634765625}],["If `K` is of characteristic `0` and there is a primitive `n`-th root of unity in `K`,\nthen `cyclotomic n K` comes from a unique polynomial with integer coefficients. ",{"type":"∀ {K : Type u_2} [inst : CommRing K] [inst_1 : IsDomain K] [inst_2 : CharZero K] {ζ : K} {n : ℕ+},\n  IsPrimitiveRoot ζ ↑n → ∃! P, Polynomial.map (Int.castRingHom K) P = Polynomial.cyclotomic' (↑n) K","name":"Polynomial.unique_int_coeff_of_cycl","isProp":true,"docString":"If `K` is of characteristic `0` and there is a primitive `n`-th root of unity in `K`,\nthen `cyclotomic n K` comes from a unique polynomial with integer coefficients. ","distance":0.3195044374229156769473547683446668088436126708984375}],["For all `n ∈ S`, there exists a primitive `n`-th root of unity in `B`. ",{"type":"∀ {S : Set ℕ+} (A : Type u) {B : Type v} [inst : CommRing A] [inst_1 : CommRing B] [inst_2 : Algebra A B]\n  [self : IsCyclotomicExtension S A B] {n : ℕ+}, n ∈ S → ∃ r, IsPrimitiveRoot r ↑n","name":"IsCyclotomicExtension.exists_prim_root","isProp":true,"docString":"For all `n ∈ S`, there exists a primitive `n`-th root of unity in `B`. ","distance":0.31989816994303266195487367440364323556423187255859375}],["**Fundamental theorem of algebra**: every non constant complex polynomial\nhas a root ",{"type":"∀ {f : Polynomial ℂ}, 0 < Polynomial.degree f → ∃ z, Polynomial.IsRoot f z","name":"Complex.exists_root","isProp":true,"docString":"**Fundamental theorem of algebra**: every non constant complex polynomial\nhas a root ","distance":0.320003642551855926878801028578891418874263763427734375}],["**The Law of Quadratic Reciprocity**: if `p` and `q` are distinct odd primes, then\n`(q / p) * (p / q) = (-1)^((p-1)(q-1)/4)`. ",{"type":"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → legendreSym q ↑p * legendreSym p ↑q = (-1) ^ (p / 2 * (q / 2))","name":"legendreSym.quadratic_reciprocity","isProp":true,"docString":"**The Law of Quadratic Reciprocity**: if `p` and `q` are distinct odd primes, then\n`(q / p) * (p / q) = (-1)^((p-1)(q-1)/4)`. ","distance":0.320169432373625106880155044564162380993366241455078125}],["The Law of Quadratic Reciprocity: if `p` and `q` are odd primes, then\n`(q / p) = (-1)^((p-1)(q-1)/4) * (p / q)`. ",{"type":"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → legendreSym q ↑p = (-1) ^ (p / 2 * (q / 2)) * legendreSym p ↑q","name":"legendreSym.quadratic_reciprocity'","isProp":true,"docString":"The Law of Quadratic Reciprocity: if `p` and `q` are odd primes, then\n`(q / p) = (-1)^((p-1)(q-1)/4) * (p / q)`. ","distance":0.321003186312984245542878625201410613954067230224609375}]]