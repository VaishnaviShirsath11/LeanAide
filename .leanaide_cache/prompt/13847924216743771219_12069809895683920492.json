[["δ",{"value":null,"type":"ℕ → ℕ","name":"δ","isProp":false,"docString":"The greatest odd divisor of a positive integer."}],["There exists infinitely many deficient numbers ",{"type":"{n | n.Deficient}.Infinite","name":"Nat.infinite_deficient","isProp":true,"docString":"There exists infinitely many deficient numbers ","distance":0.60430417092959387570516582854907028377056121826171875}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.66794113419008149801214813123806379735469818115234375}],["This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","distance":0.76149185845825073659653980939765460789203643798828125}],["The zero function is odd. ",{"type":"∀ {α : Type u_1} {β : Type u_2} [inst : Neg α] [inst_1 : NegZeroClass β], Function.Odd fun x => 0","name":"Function.Odd.zero","isProp":true,"docString":"The zero function is odd. ","distance":0.7833355537747752617150354126351885497570037841796875}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.","distance":0.70595469295015955690786313425633125007152557373046875}],["This theorem states that for all natural numbers `n`, `n` is odd if and only if it is not even. In the context of a semiring, a number `n` is odd if there exists another number `k` such that `n` equals `2*k + 1`. On the other hand, a number `n` is even if there exists a number `r` such that `n` equals `r + r`. Therefore, this theorem establishes the mutually exclusive and exhaustive nature of odd and even numbers in the set of natural numbers.",{"type":"∀ {α : Sort u_1} {a b : α}, (a = b) = (b = a)","name":"Mathlib.Data.Nat.Parity._auxLemma.4","isProp":true,"docString":"This theorem states that for all natural numbers `n`, `n` is odd if and only if it is not even. In the context of a semiring, a number `n` is odd if there exists another number `k` such that `n` equals `2*k + 1`. On the other hand, a number `n` is even if there exists a number `r` such that `n` equals `r + r`. Therefore, this theorem establishes the mutually exclusive and exhaustive nature of odd and even numbers in the set of natural numbers.","distance":0.77194584912543018351271939536673016846179962158203125}],["Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ",{"type":"{P : ℕ → Sort u_1} →\n  ((n : ℕ) → ((k : ℕ) → k < 2 * n → P k) → P (2 * n)) →\n    ((n : ℕ) → ((k : ℕ) → k < 2 * n + 1 → P k) → P (2 * n + 1)) → (n : ℕ) → P n","name":"Nat.evenOddStrongRec","isProp":false,"docString":"Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ","distance":0.783785185353274460595685013686306774616241455078125}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.7874384075648410696857126822578720748424530029296875}],["In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ",{"type":"∀ {n : ℕ} [inst : NeZero n] {k : Fin n}, Odd k ↔ Odd n ∨ Odd ↑k","name":"Fin.odd_iff","isProp":true,"docString":"In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ","distance":0.80963425147733170117447798475041054189205169677734375}],["The L-function of an odd function vanishes at negative odd integers. ",{"type":"∀ {N : ℕ} [inst : NeZero N] {Φ : ZMod N → ℂ}, Function.Odd Φ → ∀ (n : ℕ), ZMod.LFunction Φ (-(2 * ↑n) - 1) = 0","name":"ZMod.LFunction_neg_two_mul_nat_sub_one","isProp":true,"docString":"The L-function of an odd function vanishes at negative odd integers. ","distance":0.8252259443731180255099388887174427509307861328125}],["The sum of the values of an odd function is 0. ",{"type":"∀ {α : Type u_3} {β : Type u_4} [inst : AddCommGroup β] [inst_1 : NoZeroSMulDivisors ℕ β] [inst_2 : Fintype α]\n  [inst_3 : InvolutiveNeg α] {f : α → β}, Function.Odd f → ∑ a : α, f a = 0","name":"Function.Odd.sum_eq_zero","isProp":true,"docString":"The sum of the values of an odd function is 0. ","distance":0.8318760350435479011821371386758983135223388671875}],["The infinite monadic lazy list of natural numbers.",{"type":"{m : Type → Type} → [inst : Monad m] → MLList m ℕ","name":"MLList.range","isProp":false,"docString":"The infinite monadic lazy list of natural numbers.","distance":0.8449088421162189721513868789770640432834625244140625}],["The finset of those partitions in which every part is odd. ",{"type":"(n : ℕ) → Finset n.Partition","name":"Nat.Partition.odds","isProp":false,"docString":"The finset of those partitions in which every part is odd. ","distance":0.85531141504630692207200581833603791892528533935546875}],["If `a` is even, then `n` is odd iff `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Even a → (Odd (n % a) ↔ Odd n)","name":"Odd.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is odd iff `n % a` is odd. ","distance":0.8613271342162385213470088274334557354450225830078125}],["Any constant function is even. ",{"type":"∀ {α : Type u_1} {β : Type u_2} [inst : Neg α] (b : β), Function.Even fun x => b","name":"Function.Even.const","isProp":true,"docString":"Any constant function is even. ","distance":0.86982571811950515350275736636831425130367279052734375}],["In `Fin n`, all elements are even for odd `n`,\notherwise an element is even iff its `Fin.val` value is even. ",{"type":"∀ {n : ℕ} {k : Fin n}, Even k ↔ Odd n ∨ Even ↑k","name":"Fin.even_iff","isProp":true,"docString":"In `Fin n`, all elements are even for odd `n`,\notherwise an element is even iff its `Fin.val` value is even. ","distance":0.89259917998400728489372113472199998795986175537109375}],["Type of natural numbers with infinity (`⊤`) ",{"type":"Type","name":"PartENat","isProp":false,"docString":"Type of natural numbers with infinity (`⊤`) ","distance":0.896904470101472117704588526976294815540313720703125}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.89725695141992789505280825324007309973239898681640625}],["Any infinite set of naturals is denumerable. ",{"type":"(s : Set ℕ) → [inst : DecidablePred fun x => x ∈ s] → [inst : Infinite ↑s] → Denumerable ↑s","name":"Nat.Subtype.denumerable","isProp":false,"docString":"Any infinite set of naturals is denumerable. ","distance":0.899207765652404678036191398859955370426177978515625}],["If `n` is odd and `a` is even, then `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Odd n → Even a → Odd (n % a)","name":"Odd.mod_even","isProp":true,"docString":"If `n` is odd and `a` is even, then `n % a` is odd. ","distance":0.90432700610650484929209369511227123439311981201171875}],["The finset of those partitions in which every part is odd and used at most once. ",{"type":"(n : ℕ) → Finset n.Partition","name":"Nat.Partition.oddDistincts","isProp":false,"docString":"The finset of those partitions in which every part is odd and used at most once. ","distance":0.909778615239666965663900555227883160114288330078125}],["To prove Fermat's Last Theorem, it suffices to prove it for odd prime exponents.\n",{"type":"(∀ (p : ℕ), Nat.Prime p → Odd p → FermatLastTheoremFor p) → FermatLastTheorem","name":"FermatLastTheorem.of_odd_primes","isProp":true,"docString":"To prove Fermat's Last Theorem, it suffices to prove it for odd prime exponents.\n","distance":0.9139766196694709687875501913367770612239837646484375}],["Infinitely many natural numbers are equal to `d` mod `n`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]","name":"Nat.frequently_modEq","isProp":true,"docString":"Infinitely many natural numbers are equal to `d` mod `n`. ","distance":0.916990520673052866840180286089889705181121826171875}],["Any nonzero natural number is the product of an odd part `m` and a power of\ntwo `2 ^ k`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∃ k m, Odd m ∧ n = 2 ^ k * m","name":"Nat.exists_eq_two_pow_mul_odd","isProp":true,"docString":"Any nonzero natural number is the product of an odd part `m` and a power of\ntwo `2 ^ k`. ","distance":0.929131214120521686794518245733343064785003662109375}]]