[["The ordinal denoted by a notation ",{"type":"ONote → Ordinal.{0}","name":"ONote.repr","isProp":false,"docString":"The ordinal denoted by a notation ","distance":0.314225465489944288943746641962206922471523284912109375}],[" A multiplicative principal ordinal 'o' is equivalent to 'omega' raised to some power, or is less than or equal to 2.",{"type":"∀ {o : Ordinal.{u_1}}, Ordinal.Principal (fun x x_1 => x * x_1) o ↔ o ≤ 2 ∨ ∃ a, o = Ordinal.omega ^ Ordinal.omega ^ a","name":"Ordinal.principal_mul_iff_le_two_or_omega_opow_opow","isProp":true,"docString":" A multiplicative principal ordinal 'o' is equivalent to 'omega' raised to some power, or is less than or equal to 2.","distance":0.3098490306662695648043381879688240587711334228515625}],["This theorem states that for any ordinal 'o', it is not possible for 'o' to be less than zero. In other words, no ordinal number is less than zero.",{"type":"∀ (o : Ordinal.{u_3}), ¬o < 0","name":"Ordinal.not_lt_zero","isProp":true,"docString":"This theorem states that for any ordinal 'o', it is not possible for 'o' to be less than zero. In other words, no ordinal number is less than zero.","distance":0.350182491769519710356206587675842456519603729248046875}],["The cardinal number of a type ",{"type":"Type u → Cardinal.{u}","name":"Cardinal.mk","isProp":false,"docString":"The cardinal number of a type ","distance":0.315691404743424275380903054610826075077056884765625}],[" For any ordinal number 'o', o is non-zero if and only if o ≥ 1.",{"type":"∀ {o : Ordinal.{u_3}}, 1 ≤ o ↔ o ≠ 0","name":"Ordinal.one_le_iff_ne_zero","isProp":true,"docString":" For any ordinal number 'o', o is non-zero if and only if o ≥ 1.","distance":0.316379713064506074005066693644039332866668701171875}],["This theorem states that for any ordinal 'o', 'o' is greater than or equal to 1 if and only if 'o' is not equal to 0. This is saying in other words that an ordinal number is non-zero exactly when it is at least 1. This is a property of ordinal numbers which are used to represent order types in type theory, where order types are equivalence classes of well-orders.",{"type":"∀ {o : Ordinal.{u_3}}, 1 ≤ o ↔ o ≠ 0","name":"Ordinal.one_le_iff_ne_zero","isProp":true,"docString":"This theorem states that for any ordinal 'o', 'o' is greater than or equal to 1 if and only if 'o' is not equal to 0. This is saying in other words that an ordinal number is non-zero exactly when it is at least 1. This is a property of ordinal numbers which are used to represent order types in type theory, where order types are equivalence classes of well-orders.","distance":0.35112764283435915491082823791657574474811553955078125}],["Notation for 0 ",{"type":"Zero ONote","name":"ONote.instZeroONote","isProp":false,"docString":"Notation for 0 ","distance":0.32766774665642983688229605832020752131938934326171875}],["`ω` as an element of the group of units. ",{"type":"(p : ℕ) → (LucasLehmer.X (LucasLehmer.q p))ˣ","name":"LucasLehmer.ωUnit","isProp":false,"docString":"`ω` as an element of the group of units. ","distance":0.32830884827709139184293007929227314889430999755859375}],["Negation of a natural number. ",{"type":"ℕ → ℤ","name":"Int.negOfNat","isProp":false,"docString":"Negation of a natural number. ","distance":0.329473956106296650414577698029461316764354705810546875}],["`scale x o` is the ordinal notation for `ω ^ x * o`. ",{"type":"ONote → ONote → ONote","name":"ONote.scale","isProp":false,"docString":"`scale x o` is the ordinal notation for `ω ^ x * o`. ","distance":0.329677290211344231618539879491436295211315155029296875}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.331036398031047784940028577693738043308258056640625}],["The underlying natural number ",{"type":"ℕ+ → ℕ","name":"PNat.val","isProp":false,"docString":"The underlying natural number ","distance":0.331145938514203763691767790078301914036273956298828125}],["The numeral `((0+1)+⋯)+1`. ",{"type":"{R : Type u} → [inst : One R] → [inst : Zero R] → [inst : Add R] → ℕ → R","name":"Nat.unaryCast","isProp":false,"docString":"The numeral `((0+1)+⋯)+1`. ","distance":0.331328415729029768233004915600758977234363555908203125}],["`a ∈ o` means that `o` is defined and equal to `a` ",{"type":"{α : Type u_1} → α → Part α → Prop","name":"Part.Mem","isProp":false,"docString":"`a ∈ o` means that `o` is defined and equal to `a` ","distance":0.332808274886074284548698187791160307824611663818359375}],["Convert a natural number to an ordinal notation ",{"type":"ℕ → NONote","name":"NONote.ofNat","isProp":false,"docString":"Convert a natural number to an ordinal notation ","distance":0.33371268003799292589661718011484481394290924072265625}],["a first integer ",{"type":"{n : ℤ} → CochainComplex.HomComplex.Triplet n → ℤ","name":"CochainComplex.HomComplex.Triplet.p","isProp":false,"docString":"a first integer ","distance":0.33694050362469096793205380890867672860622406005859375}],["a second integer ",{"type":"{n : ℤ} → CochainComplex.HomComplex.Triplet n → ℤ","name":"CochainComplex.HomComplex.Triplet.q","isProp":false,"docString":"a second integer ","distance":0.340130284770010671291373682834091596305370330810546875}],["The number `0 : ℤ`, as a standalone definition. ",{"type":"ℤ","name":"Int.zero","isProp":false,"docString":"The number `0 : ℤ`, as a standalone definition. ","distance":0.340877177789677909824916923753335140645503997802734375}],["An arrow ending in the zero object is zero ",{"type":"∀ {C : Type u} [inst : CategoryTheory.Category.{v, u} C] [inst_1 : CategoryTheory.Limits.HasZeroObject C]\n  [inst_2 : CategoryTheory.Limits.HasZeroMorphisms C] {X : C} (f : X ⟶ 0), f = 0","name":"CategoryTheory.Limits.zero_of_to_zero","isProp":true,"docString":"An arrow ending in the zero object is zero ","distance":0.34345637291768771337530097298440523445606231689453125}],["Notation for ω ",{"type":"ONote","name":"ONote.omega","isProp":false,"docString":"Notation for ω ","distance":0.343644972931480829902994855729048140347003936767578125}],["The number `1 : ℤ`, as a standalone definition. ",{"type":"ℤ","name":"Int.one","isProp":false,"docString":"The number `1 : ℤ`, as a standalone definition. ","distance":0.34529979848452507784628551235073246061801910400390625}],["The zero of the ring ",{"type":"{d : ℤ} → Zero (ℤ√d)","name":"Zsqrtd.instZeroZsqrtd","isProp":false,"docString":"The zero of the ring ","distance":0.345716346321148171316650632434175349771976470947265625}],["Print an ordinal notation ",{"type":"ONote → String","name":"ONote.toString","isProp":false,"docString":"Print an ordinal notation ","distance":0.34863613974459373157088748484966345131397247314453125}],["Nonnegative real numbers. ",{"type":"Type","name":"NNReal","isProp":false,"docString":"Nonnegative real numbers. ","distance":0.34971678672702621870627126554609276354312896728515625}]]