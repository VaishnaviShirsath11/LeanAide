[["If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ","distance":0.2156654031651363545574184854558552615344524383544921875}],[" For every positive natural number `n` different from `1`, there exists a natural number `k` such that `n = Suc(k)`. (Here, `Suc` denotes the successor function.)",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":" For every positive natural number `n` different from `1`, there exists a natural number `k` such that `n = Suc(k)`. (Here, `Suc` denotes the successor function.)","distance":0.2451951478244065729672485076662269420921802520751953125}],["This theorem states that for any positive natural number `n` that is not equal to `1`, there exists another positive natural number `k` such that `n` is the successor of `k`. In other words, if a positive natural number is not `1`, then it can be expressed as `k + 1` for some positive natural number `k`.",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"This theorem states that for any positive natural number `n` that is not equal to `1`, there exists another positive natural number `k` such that `n` is the successor of `k`. In other words, if a positive natural number is not `1`, then it can be expressed as `k + 1` for some positive natural number `k`.","distance":0.228328133526172816214483418661984615027904510498046875}],[" For any natural number `n` and `k`, the prime factorization of `n` raised to the power of `k` is `k` times the prime factorization of `n`. Equivalently, the power of each prime `p` in the prime factorization of `n^k` is `k` times its power in the prime factorization of `n`.",{"value":null,"type":"∀ (n k : ℕ), (n ^ k).factorization = k • n.factorization","statement":"theorem Nat.factorization_pow : ∀ (n k : ℕ), (n ^ k).factorization = k • n.factorization := by sorry","name":"Nat.factorization_pow","isProp":true,"docString":"For any `p`, the power of `p` in `n^k` is `k` times the power in `n` ","description":"This theorem states that for any natural numbers `n` and `k`, the prime factorization of `n` raised to the power of `k` is the same as `k` times the prime factorization of `n`. In other words, the multiplicity of each prime factor `p` in `n^k` is `k` times the multiplicity of `p` in `n`. This is equivalent to the mathematical statement that for any prime `p`, the power of `p` in the prime factorization of `n^k` is `k` times the power of `p` in the prime factorization of `n`.","concise-description":" For any natural number `n` and `k`, the prime factorization of `n` raised to the power of `k` is `k` times the prime factorization of `n`. Equivalently, the power of each prime `p` in the prime factorization of `n^k` is `k` times its power in the prime factorization of `n`."}],["Equivalence between the set of natural numbers which are `≥ k` and `ℕ`, given by `n → n - k`. ",{"type":"(k : ℕ) → { n // n ∉ Multiset.range k } ≃ ℕ","name":"notMemRangeEquiv","isProp":false,"docString":"Equivalence between the set of natural numbers which are `≥ k` and `ℕ`, given by `n → n - k`. ","distance":0.2590179280853899257408556877635419368743896484375}],[" For any natural numbers $n$ and $k$ with $k \\leq n$, the product of each prime $p$ raised to the power of its exponent in the prime factorization of binomial coefficient $n \\choose k$ equals $n \\choose k$.",{"type":"∀ (n k : ℕ), k ≤ n → ((Finset.range (n + 1)).prod fun p => p ^ (n.choose k).factorization p) = n.choose k","name":"Nat.prod_pow_factorization_choose","isProp":true,"docString":" For any natural numbers $n$ and $k$ with $k \\leq n$, the product of each prime $p$ raised to the power of its exponent in the prime factorization of binomial coefficient $n \\choose k$ equals $n \\choose k$.","distance":0.2683186762455400664606486316188238561153411865234375}],["This theorem states that for any natural number `n` that is not zero, there exists another natural number `k` such that `n` is the successor of `k`. In other words, if you have a nonzero natural number, it must be one greater than another natural number.",{"type":"∀ {n : ℕ}, n ≠ 0 → ∃ k, n = k.succ","name":"Nat.exists_eq_succ_of_ne_zero","isProp":true,"docString":"This theorem states that for any natural number `n` that is not zero, there exists another natural number `k` such that `n` is the successor of `k`. In other words, if you have a nonzero natural number, it must be one greater than another natural number.","distance":0.2334214035962301758697634568306966684758663177490234375}],[" Every natural number can be expressed as the sum of four squares of natural numbers.",{"value":null,"type":"∀ (n : ℕ), ∃ a b c d, a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = n","statement":"theorem Nat.sum_four_squares : ∀ (n : ℕ), ∃ a b c d, a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = n := by sorry","name":"Nat.sum_four_squares","isProp":true,"docString":"**Four squares theorem** ","description":"The \"Four Squares Theorem\" states that for any natural number `n`, there exist four natural numbers `a`, `b`, `c`, and `d`, such that the sum of their squares equals `n`. In other words, any natural number can be expressed as the sum of four perfect squares.","concise-description":" Every natural number can be expressed as the sum of four squares of natural numbers."}],["A subset of `ℕ` containing `k : ℕ` and closed under `Nat.succ` contains every `n ≥ k`. ",{"type":"∀ {n k : ℕ} {S : Set ℕ}, k ∈ S → (∀ k ∈ S, k + 1 ∈ S) → k ≤ n → n ∈ S","name":"Nat.set_induction_bounded","isProp":true,"docString":"A subset of `ℕ` containing `k : ℕ` and closed under `Nat.succ` contains every `n ≥ k`. ","distance":0.261250215410628261469838662378606386482715606689453125}],[" The theorem asserts that for all natural numbers n and k, the product of the binomial coefficient of n choose k+1 and k+1 equals the product of the binomial coefficient of n choose k and (n-k). In other words, $\\binom{n}{k+1} \\cdot (k+1) = \\binom{n}{k} \\cdot (n-k)$.",{"type":"∀ (n k : ℕ), n.choose (k + 1) * (k + 1) = n.choose k * (n - k)","name":"Nat.choose_succ_right_eq","isProp":true,"docString":" The theorem asserts that for all natural numbers n and k, the product of the binomial coefficient of n choose k+1 and k+1 equals the product of the binomial coefficient of n choose k and (n-k). In other words, $\\binom{n}{k+1} \\cdot (k+1) = \\binom{n}{k} \\cdot (n-k)$.","distance":0.268797867927403733023794529799488373100757598876953125}],["This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.",{"type":"∀ (n : ℕ), Even (n * (n - 1))","name":"Nat.even_mul_self_pred","isProp":true,"docString":"This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.","distance":0.238842794853718898284711258384049870073795318603515625}],[" For every positive natural number `n` different from `1`, there exists a natural number `k` such that `n = Suc(k)`. (Here, `Suc` denotes the successor function.)",{"value":null,"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","statement":"theorem PNat.exists_eq_succ_of_ne_one : ∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1 := by sorry","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ","description":"This theorem states that for any positive natural number `n` that is not equal to `1`, there exists another positive natural number `k` such that `n` is the successor of `k`. In other words, if a positive natural number is not `1`, then it can be expressed as `k + 1` for some positive natural number `k`.","concise-description":" For every positive natural number `n` different from `1`, there exists a natural number `k` such that `n = Suc(k)`. (Here, `Suc` denotes the successor function.)"}],["`i + k : Fin2 (n + k)` when `i : Fin2 n` and `k : ℕ` ",{"type":"{n : ℕ} → Fin2 n → (k : ℕ) → Fin2 (n + k)","name":"Fin2.add","isProp":false,"docString":"`i + k : Fin2 (n + k)` when `i : Fin2 n` and `k : ℕ` ","distance":0.270118129692899888727453117098775692284107208251953125}],[" For any natural numbers n and k with k <= n, the product of the factorial of (n-k) and the descending factorial of n by k is equal to the factorial of n.",{"type":"∀ {n k : ℕ}, k ≤ n → (n - k).factorial * n.descFactorial k = n.factorial","name":"Nat.factorial_mul_descFactorial","isProp":true,"docString":" For any natural numbers n and k with k <= n, the product of the factorial of (n-k) and the descending factorial of n by k is equal to the factorial of n.","distance":0.27733642396227742299430474304244853556156158447265625}],["This theorem states that for any subset `S` of natural numbers `ℕ`, any arbitrary natural numbers `n` and `k`, if `k` is an element of `S` and `S` is closed under successor operation (meaning if `k` is in `S`, then `k + 1` is also in `S`), then every natural number `n` that is greater than or equal to `k` is also an element of `S`.",{"type":"∀ {n k : ℕ} {S : Set ℕ}, k ∈ S → (∀ k ∈ S, k + 1 ∈ S) → k ≤ n → n ∈ S","name":"Nat.set_induction_bounded","isProp":true,"docString":"This theorem states that for any subset `S` of natural numbers `ℕ`, any arbitrary natural numbers `n` and `k`, if `k` is an element of `S` and `S` is closed under successor operation (meaning if `k` is in `S`, then `k + 1` is also in `S`), then every natural number `n` that is greater than or equal to `k` is also an element of `S`.","distance":0.2424223873458803690805751784864696674048900604248046875}],[" The descending factorial of a natural number `n` at `k+1` equals the product of `(n-k)` and the descending factorial of `n` at `k`. In other words, `n.descFactorial (k+1) = (n-k) * n.descFactorial k`.",{"value":null,"type":"∀ (n k : ℕ), n.descFactorial (k + 1) = (n - k) * n.descFactorial k","statement":"theorem Nat.descFactorial_succ : ∀ (n k : ℕ), n.descFactorial (k + 1) = (n - k) * n.descFactorial k := by sorry","name":"Nat.descFactorial_succ","isProp":true,"description":"The theorem `Nat.descFactorial_succ` states that for any two natural numbers `n` and `k`, the descending factorial of `n` at `(k + 1)` is equal to the product of `(n - k)` and the descending factorial of `n` at `k`. In mathematical terms, this means that `n.descFactorial (k + 1) = (n - k) * n.descFactorial k`. The descending factorial, `n.descFactorial k`, is defined as the factorial of `n` divided by the factorial of `(n - k)`, implemented recursively.","concise-description":" The descending factorial of a natural number `n` at `k+1` equals the product of `(n-k)` and the descending factorial of `n` at `k`. In other words, `n.descFactorial (k+1) = (n-k) * n.descFactorial k`."}],["The constant function with value `n : ℤ`. ",{"type":"{α : Type u_1} → ℤ → Poly α","name":"Poly.const","isProp":false,"docString":"The constant function with value `n : ℤ`. ","distance":0.280628251828454244876098755412385798990726470947265625}],["A single variable `n` is represented by a sum with coefficient `1` and monomial `n`. ",{"type":"ℕ → Linarith.Sum","name":"Linarith.var","isProp":false,"docString":"A single variable `n` is represented by a sum with coefficient `1` and monomial `n`. ","distance":0.285993153339767214315969567905995063483715057373046875}],["An equivalent definition for prime powers: `n` is a prime power iff there is a prime `p` and a\nnatural `k` such that `n` can be written as `p^(k+1)`. ",{"type":"∀ {R : Type u_1} [inst : CommMonoidWithZero R] (n : R), IsPrimePow n ↔ ∃ p k, Prime p ∧ p ^ (k + 1) = n","name":"isPrimePow_iff_pow_succ","isProp":true,"docString":"An equivalent definition for prime powers: `n` is a prime power iff there is a prime `p` and a\nnatural `k` such that `n` can be written as `p^(k+1)`. ","distance":0.287679245503837999198282204815768636763095855712890625}],["A natural number `n` is a sum of two squares if and only if `n = a^2 * b` with natural\nnumbers `a` and `b` such that `-1` is a square modulo `b`. ",{"type":"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∃ a b, n = a ^ 2 * b ∧ IsSquare (-1)","name":"Nat.eq_sq_add_sq_iff_eq_sq_mul","isProp":true,"docString":"A natural number `n` is a sum of two squares if and only if `n = a^2 * b` with natural\nnumbers `a` and `b` such that `-1` is a square modulo `b`. ","distance":0.287896858216801054819455885080969892442226409912109375}]]