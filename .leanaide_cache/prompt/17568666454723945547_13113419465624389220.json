[["The finset of those partitions in which every part is odd. ",{"type":"(n : ℕ) → Finset (Nat.Partition n)","name":"Nat.Partition.odds","isProp":false,"docString":"The finset of those partitions in which every part is odd. ","distance":0.2282905187999360041573027046979404985904693603515625}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.2284992228270007197377111651803716085851192474365234375}],["This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.","distance":0.275532098957256887938882528032991103827953338623046875}],["The finset of those partitions in which every part is odd and used at most once. ",{"type":"(n : ℕ) → Finset (Nat.Partition n)","name":"Nat.Partition.oddDistincts","isProp":false,"docString":"The finset of those partitions in which every part is odd and used at most once. ","distance":0.26616594564234363762267321362742222845554351806640625}],[" Every integer can be classified as even (being expressible as 2*r for some integer r) or odd (being expressible as 2*k + 1 for some integer k).",{"type":"∀ (n : ℤ), Even n ∨ Odd n","name":"Int.even_or_odd","isProp":true,"docString":" Every integer can be classified as even (being expressible as 2*r for some integer r) or odd (being expressible as 2*k + 1 for some integer k).","distance":0.25823548634351711772438875414081849157810211181640625}],["This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","distance":0.282740056671484663031179707104456610977649688720703125}],["The convolution of two even functions is also even. ",{"type":"∀ {𝕜 : Type u𝕜} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G → E} {g : G → E'} {x : G}\n  [inst_3 : NontriviallyNormedField 𝕜] [inst_4 : NormedSpace 𝕜 E] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : NormedSpace 𝕜 F]\n  (L : E →L[𝕜] E' →L[𝕜] F) [inst_7 : MeasurableSpace G] {μ : MeasureTheory.Measure G} [inst_8 : NormedSpace ℝ F]\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant μ]\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant μ] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\n  (∀ᵐ (x : G) ∂μ, f (-x) = f x) → (∀ᵐ (x : G) ∂μ, g (-x) = g x) → convolution f g L (-x) = convolution f g L x","name":"convolution_neg_of_neg_eq","isProp":true,"docString":"The convolution of two even functions is also even. ","distance":0.2666844827449625920934295209008269011974334716796875}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.26859468291802068851126250592642463743686676025390625}],["The clifford algebra is graded by the even and odd parts. ",{"type":"{R : Type u_1} →\n  {M : Type u_2} →\n    [inst : CommRing R] →\n      [inst_1 : AddCommGroup M] →\n        [inst_2 : Module R M] → (Q : QuadraticForm R M) → GradedAlgebra (CliffordAlgebra.evenOdd Q)","name":"CliffordAlgebra.gradedAlgebra","isProp":false,"docString":"The clifford algebra is graded by the even and odd parts. ","distance":0.284295285987309631625663541854009963572025299072265625}],["Elements of a stream with odd indices. ",{"type":"{α : Type u_1} → Stream' α → Stream' α","name":"Stream'.odd","isProp":false,"docString":"Elements of a stream with odd indices. ","distance":0.2940024681186812482991399519960395991802215576171875}],["Elements of a stream with even indices. ",{"type":"{α : Type u_1} → Stream' α → Stream' α","name":"Stream'.even","isProp":false,"docString":"Elements of a stream with even indices. ","distance":0.30460917060775971609842827092506922781467437744140625}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.30676778185789388420090517684002406895160675048828125}],["In a finite field of odd characteristic, not every element is a square. ",{"type":"∀ {F : Type u_3} [inst : Field F] [inst_1 : Finite F], ringChar F ≠ 2 → ∃ a, ¬IsSquare a","name":"FiniteField.exists_nonsquare","isProp":true,"docString":"In a finite field of odd characteristic, not every element is a square. ","distance":0.308951156953845618158283059528912417590618133544921875}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.309296321091380443935037192204617895185947418212890625}],["Two natural numbers are equal if and only if they have the same multiples. ",{"type":"∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n","name":"Nat.dvd_right_iff_eq","isProp":true,"docString":"Two natural numbers are equal if and only if they have the same multiples. ","distance":0.3102723940199150209906520103686489164829254150390625}],["A sum of finite numbers is still finite ",{"type":"∀ {α : Type u_1} {s : Finset α} {f : α → ENNReal}, (∀ a ∈ s, f a ≠ ⊤) → (Finset.sum s fun a => f a) < ⊤","name":"ENNReal.sum_lt_top","isProp":true,"docString":"A sum of finite numbers is still finite ","distance":0.314829020928581837512894026076537556946277618408203125}],["The type of prime numbers ",{"type":"Type","name":"Nat.Primes","isProp":false,"docString":"The type of prime numbers ","distance":0.3218003760432595061757865551044233143329620361328125}],["Ordinal games are numeric. ",{"type":"∀ (o : Ordinal.{u_1}), SetTheory.PGame.Numeric (Ordinal.toPGame o)","name":"SetTheory.PGame.numeric_toPGame","isProp":true,"docString":"Ordinal games are numeric. ","distance":0.32421656459619219159407066399580799043178558349609375}],["A sum of numbers is infinite iff one of them is infinite ",{"type":"∀ {ι : Type u_1} {M : Type u_4} [inst : AddCommMonoid M] {s : Finset ι} {f : ι → WithTop M},\n  (Finset.sum s fun i => f i) = ⊤ ↔ ∃ i ∈ s, f i = ⊤","name":"WithTop.sum_eq_top_iff","isProp":true,"docString":"A sum of numbers is infinite iff one of them is infinite ","distance":0.326974153699807590367498733030515722930431365966796875}],["The finite field `F` has even cardinality iff it has characteristic `2`. ",{"type":"∀ {F : Type u_3} [inst : Field F] [inst_1 : Fintype F], ringChar F = 2 ↔ Fintype.card F % 2 = 0","name":"FiniteField.even_card_iff_char_two","isProp":true,"docString":"The finite field `F` has even cardinality iff it has characteristic `2`. ","distance":0.3287895691412348053717096263426356017589569091796875}],["for every pair of objects there exists another object \"to the right\" ",{"type":"∀ {C : Type u} [inst : CategoryTheory.Category.{v, u} C] [self : CategoryTheory.IsFilteredOrEmpty C] (X Y : C),\n  ∃ Z x x, True","name":"CategoryTheory.IsFilteredOrEmpty.cocone_objs","isProp":true,"docString":"for every pair of objects there exists another object \"to the right\" ","distance":0.329378647848940442344201073865406215190887451171875}],["The number of inequalities in the series ",{"type":"{α : Type u_1} → {r : Rel α α} → RelSeries r → ℕ","name":"RelSeries.length","isProp":false,"docString":"The number of inequalities in the series ","distance":0.33078071597223457356307108057080768048763275146484375}],["No zero divisors. ",{"type":"∀ {α : Type u_2} [self : CanonicallyOrderedCommSemiring α] {a b : α}, a * b = 0 → a = 0 ∨ b = 0","name":"CanonicallyOrderedCommSemiring.eq_zero_or_eq_zero_of_mul_eq_zero","isProp":true,"docString":"No zero divisors. ","distance":0.3329741599413764685522210129420273005962371826171875}],["Two natural numbers are equal if and only if they have the same divisors. ",{"type":"∀ {m n : ℕ}, (∀ (a : ℕ), a ∣ m ↔ a ∣ n) ↔ m = n","name":"Nat.dvd_left_iff_eq","isProp":true,"docString":"Two natural numbers are equal if and only if they have the same divisors. ","distance":0.334555343578426700457129072674433700740337371826171875}]]