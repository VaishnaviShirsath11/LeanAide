[["If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ","distance":0.23206216902391874068456445456831716001033782958984375}],[" For every natural number n, the cardinality of the set of natural numbers up to n's successor is the successor of the cardinality of the set of natural numbers up to n.",{"type":"∀ (n : ℕ), ↑n.succ = Order.succ ↑n","name":"Cardinal.nat_succ","isProp":true,"docString":" For every natural number n, the cardinality of the set of natural numbers up to n's successor is the successor of the cardinality of the set of natural numbers up to n.","distance":0.249359445886107200518466697758412919938564300537109375}],["This theorem states that for any natural number `n`, adding one to `n` is equivalent to the successor of `n`. In other words, for any number `n`, `n + 1` is the same as the next number after `n` in the sequence of natural numbers. This is a fundamental property of natural numbers in the Peano postulates.",{"type":"∀ (n : Num), n + 1 = n.succ","name":"Num.add_one","isProp":true,"docString":"This theorem states that for any natural number `n`, adding one to `n` is equivalent to the successor of `n`. In other words, for any number `n`, `n + 1` is the same as the next number after `n` in the sequence of natural numbers. This is a fundamental property of natural numbers in the Peano postulates.","distance":0.23720469741536087671107679852866567671298980712890625}],[" Every pre-game represented by a natural number is a numeric pre-game.",{"value":null,"type":"∀ (n : ℕ), (↑n).Numeric","statement":"theorem SetTheory.PGame.numeric_nat : ∀ (n : ℕ), (↑n).Numeric := by sorry","name":"SetTheory.PGame.numeric_nat","isProp":true,"docString":"Pre-games defined by natural numbers are numeric. ","description":"This theorem states that all pre-games that are defined by natural numbers are numeric. In other words, if you have a pre-game that is represented by a natural number `n` (denoted as `↑n` in the code), the theorem guarantees that this pre-game will obey the properties of a numeric pre-game as defined in Set Theory and Game Theory.","concise-description":" Every pre-game represented by a natural number is a numeric pre-game."}],["The stream of natural numbers: `Stream'.get n Stream'.nats = n`. ",{"type":"Stream' ℕ","name":"Stream'.nats","isProp":false,"docString":"The stream of natural numbers: `Stream'.get n Stream'.nats = n`. ","distance":0.2609449769897320692280118237249553203582763671875}],[" For all natural numbers n, Nat.succ n equals 1 + n.",{"type":"∀ (n : ℕ), n.succ = 1 + n","name":"Nat.succ_eq_one_add","isProp":true,"docString":" For all natural numbers n, Nat.succ n equals 1 + n.","distance":0.25137428615416157473561042934306897222995758056640625}],["This theorem states that for any natural number `n`, the successor of `n` (denoted as `Nat.succ n`) is equal to `1 + n`. In other words, it asserts that the operation of finding the next natural number (successor operation) is equivalent to adding one to the given natural number. This is a foundational aspect of the arithmetic of natural numbers.",{"type":"∀ (n : ℕ), n.succ = 1 + n","name":"Nat.succ_eq_one_add","isProp":true,"docString":"This theorem states that for any natural number `n`, the successor of `n` (denoted as `Nat.succ n`) is equal to `1 + n`. In other words, it asserts that the operation of finding the next natural number (successor operation) is equivalent to adding one to the given natural number. This is a foundational aspect of the arithmetic of natural numbers.","distance":0.2377892500501351535913130419430672191083431243896484375}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.265634276119685652783886098404764197766780853271484375}],[" For any natural number `n`, `n + 1` is the same as the successor of `n`. (Alternatively: The successor of a natural number `n` is `n + 1`.)",{"type":"∀ (n : Num), n + 1 = n.succ","name":"Num.add_one","isProp":true,"docString":" For any natural number `n`, `n + 1` is the same as the successor of `n`. (Alternatively: The successor of a natural number `n` is `n + 1`.)","distance":0.25523232239870219384414440355612896382808685302734375}],["This theorem states that for every natural number `n`, the successor of `n` is equal to `n` plus one. In other words, it enforces the standard mathematical principle that adding one to a natural number gives you the next consecutive natural number.",{"type":"∀ (n : ℕ), n.succ = n + 1","name":"Nat.succ_eq_add_one","isProp":true,"docString":"This theorem states that for every natural number `n`, the successor of `n` is equal to `n` plus one. In other words, it enforces the standard mathematical principle that adding one to a natural number gives you the next consecutive natural number.","distance":0.2390941244693388367803521532550803385674953460693359375}],["A single variable `n` is represented by a sum with coefficient `1` and monomial `n`. ",{"type":"ℕ → Linarith.Sum","name":"Linarith.var","isProp":false,"docString":"A single variable `n` is represented by a sum with coefficient `1` and monomial `n`. ","distance":0.272752059579855821169758200994692742824554443359375}],[" For every positive natural number `n` different from `1`, there exists a natural number `k` such that `n = Suc(k)`. (Here, `Suc` denotes the successor function.)",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":" For every positive natural number `n` different from `1`, there exists a natural number `k` such that `n = Suc(k)`. (Here, `Suc` denotes the successor function.)","distance":0.26898383472852582798395815188996493816375732421875}],["This theorem states that for any natural number `n`, the sum of `1` and `n` is equal to the successor of `n`. In more mathematical terms, the theorem is saying that for all natural numbers `n`, 1 + n = n + 1, where \"succ\" denotes the successor function (i.e., the function that gives the next natural number). This corresponds to the intuitive concept of adding one to a number to get the next number.",{"type":"∀ (n : ℕ), 1 + n = n.succ","name":"Nat.one_add","isProp":true,"docString":"This theorem states that for any natural number `n`, the sum of `1` and `n` is equal to the successor of `n`. In more mathematical terms, the theorem is saying that for all natural numbers `n`, 1 + n = n + 1, where \"succ\" denotes the successor function (i.e., the function that gives the next natural number). This corresponds to the intuitive concept of adding one to a number to get the next number.","distance":0.2440181144537620083756479516523540951311588287353515625}],["The integers modulo `n : ℕ`. ",{"type":"ℕ → Type","name":"ZMod","isProp":false,"docString":"The integers modulo `n : ℕ`. ","distance":0.27475753991350326810305659819277934730052947998046875}],["Raising to the power `(n + 1 : ℕ)` behaves as expected. ",{"type":"∀ {M : Type u} [self : LeftCancelMonoid M] (n : ℕ) (x : M),\n  LeftCancelMonoid.npow (n + 1) x = x * LeftCancelMonoid.npow n x","name":"LeftCancelMonoid.npow_succ","isProp":true,"docString":"Raising to the power `(n + 1 : ℕ)` behaves as expected. ","distance":0.27489250075412297036336894962005317211151123046875}],["A subset of `ℕ` containing `k : ℕ` and closed under `Nat.succ` contains every `n ≥ k`. ",{"type":"∀ {n k : ℕ} {S : Set ℕ}, k ∈ S → (∀ k ∈ S, k + 1 ∈ S) → k ≤ n → n ∈ S","name":"Nat.set_induction_bounded","isProp":true,"docString":"A subset of `ℕ` containing `k : ℕ` and closed under `Nat.succ` contains every `n ≥ k`. ","distance":0.278443298635587532796620280350907705724239349365234375}],["The constant function with value `n : ℤ`. ",{"type":"{α : Type u_1} → ℤ → Poly α","name":"Poly.const","isProp":false,"docString":"The constant function with value `n : ℤ`. ","distance":0.280260478198593288023943159714690409600734710693359375}]]