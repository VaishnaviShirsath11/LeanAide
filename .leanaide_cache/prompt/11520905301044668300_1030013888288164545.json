[["If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ",{"type":"∀ {m n : ℕ}, Even (m ^ n) ↔ Even m ∧ n ≠ 0","name":"Nat.even_pow","isProp":true,"docString":"If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ","distance":0.6307164862374066149897089417208917438983917236328125}],[" For any natural numbers `n` and `m` with `m ≤ n`, we have `n = (n - m) + m`.",{"type":"∀ {n m : ℕ}, m ≤ n → n - (n - m) = m","name":"Nat.sub_sub_self","isProp":true,"docString":" For any natural numbers `n` and `m` with `m ≤ n`, we have `n = (n - m) + m`.","distance":0.51269502214267193007657397174625657498836517333984375}],["This theorem states that for all natural numbers `m` and `n`, the result of adding `n` incremented by one to `m` and then subtracting one is the same as just adding `n` to `m`. In mathematical notation, it asserts that for each pair of natural numbers `m` and `n`, the equation `m + (n + 1) - 1 = m + n` holds true.",{"type":"∀ (m n : ℕ), m + n.succ - 1 = m + n","name":"Nat.add_succ_sub_one","isProp":true,"docString":"This theorem states that for all natural numbers `m` and `n`, the result of adding `n` incremented by one to `m` and then subtracting one is the same as just adding `n` to `m`. In mathematical notation, it asserts that for each pair of natural numbers `m` and `n`, the equation `m + (n + 1) - 1 = m + n` holds true.","distance":0.64903933609714858921080349318799562752246856689453125}],["A natural number `m` divides the sum `m + n` if and only if `m` divides `n`.",{"type":"∀ {m n : ℕ}, m ∣ m + n ↔ m ∣ n","name":"Nat.dvd_add_self_left","isProp":true,"docString":"A natural number `m` divides the sum `m + n` if and only if `m` divides `n`.","distance":0.75071343805959844797115465553360991179943084716796875}],[" For any natural numbers `m` and `n` with `m < n`, there exists a natural number `k` such that `n = m + k + 1`.",{"type":"∀ {m n : ℕ}, m < n → ∃ k, n = m + k + 1","name":"Nat.exists_eq_add_of_lt","isProp":true,"docString":" For any natural numbers `m` and `n` with `m < n`, there exists a natural number `k` such that `n = m + k + 1`.","distance":0.53382345970077393904063001173199154436588287353515625}],["This theorem states that for any two natural numbers `n` and `m`, the product of the successor of `n` (i.e., `n + 1` in common mathematical notation) and `m` is equal to the sum of the product of `n` and `m`, and `m`. In standard mathematical notation, this is saying that for all natural numbers n and m, (n + 1) * m = n * m + m. This is a basic property of natural number arithmetic, reflecting the distributive law.",{"type":"∀ (n m : ℕ), n.succ * m = n * m + m","name":"Nat.succ_mul","isProp":true,"docString":"This theorem states that for any two natural numbers `n` and `m`, the product of the successor of `n` (i.e., `n + 1` in common mathematical notation) and `m` is equal to the sum of the product of `n` and `m`, and `m`. In standard mathematical notation, this is saying that for all natural numbers n and m, (n + 1) * m = n * m + m. This is a basic property of natural number arithmetic, reflecting the distributive law.","distance":0.66721420986722390633616441846243105828762054443359375}],["The natural number less than `lcm n m` congruent to `a` mod `n` and `b` mod `m` ",{"type":"{m n a b : ℕ} → a ≡ b [MOD n.gcd m] → { k // k ≡ a [MOD n] ∧ k ≡ b [MOD m] }","name":"Nat.chineseRemainder'","isProp":false,"docString":"The natural number less than `lcm n m` congruent to `a` mod `n` and `b` mod `m` ","distance":0.7508375006170602272703717972035519778728485107421875}],["A natural number `n` is a sum of two squares if and only if `n = a^2 * b` with natural\nnumbers `a` and `b` such that `-1` is a square modulo `b`. ",{"type":"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∃ a b, n = a ^ 2 * b ∧ IsSquare (-1)","name":"Nat.eq_sq_add_sq_iff_eq_sq_mul","isProp":true,"docString":"A natural number `n` is a sum of two squares if and only if `n = a^2 * b` with natural\nnumbers `a` and `b` such that `-1` is a square modulo `b`. ","distance":0.753855978054453590431194243137724697589874267578125}],["A natural number `m` divides the sum `n + m` if and only if `m` divides `n`.",{"type":"∀ {m n : ℕ}, m ∣ n + m ↔ m ∣ n","name":"Nat.dvd_add_self_right","isProp":true,"docString":"A natural number `m` divides the sum `n + m` if and only if `m` divides `n`.","distance":0.7595465575534914304256517425528727471828460693359375}],["The integers modulo `n : ℕ`. ",{"type":"ℕ → Type","name":"ZMod","isProp":false,"docString":"The integers modulo `n : ℕ`. ","distance":0.7693899081021056129969792891643010079860687255859375}],["The strict less than relation on natural numbers is defined as `n < m := n + 1 ≤ m`. ",{"type":"ℕ → ℕ → Prop","name":"Nat.lt","isProp":false,"docString":"The strict less than relation on natural numbers is defined as `n < m := n + 1 ≤ m`. ","distance":0.77857990706833690719435026039718650281429290771484375}],["If all the elements of a finset of naturals are less than `n`, then the sum of their powers of\n`m ≥ 2` is less than `m ^ n`. ",{"type":"∀ {m n : ℕ} {s : Finset ℕ}, 2 ≤ m → (∀ k ∈ s, k < n) → ∑ k ∈ s, m ^ k < m ^ n","name":"Nat.geomSum_lt","isProp":true,"docString":"If all the elements of a finset of naturals are less than `n`, then the sum of their powers of\n`m ≥ 2` is less than `m ^ n`. ","distance":0.77920182179681607426147138539818115532398223876953125}],["Multiplication by `(n + 1 : ℕ)` behaves as expected. ",{"type":"∀ {M : Type u} [self : AddMonoid M] (n : ℕ) (x : M), AddMonoid.nsmul (n + 1) x = AddMonoid.nsmul n x + x","name":"AddMonoid.nsmul_succ","isProp":true,"docString":"Multiplication by `(n + 1 : ℕ)` behaves as expected. ","distance":0.7867459944020698259237178717739880084991455078125}],["The natural number less than `n*m` congruent to `a` mod `n` and `b` mod `m` ",{"type":"{m n : ℕ} → n.Coprime m → (a b : ℕ) → { k // k ≡ a [MOD n] ∧ k ≡ b [MOD m] }","name":"Nat.chineseRemainder","isProp":false,"docString":"The natural number less than `n*m` congruent to `a` mod `n` and `b` mod `m` ","distance":0.79074225108908169357135875543463043868541717529296875}],["Given two natural numbers `n, m` greater than 1 we have `f n ≤ f m ^ logb m n`. ",{"type":"∀ {f : MulRingNorm ℚ} {m n : ℕ}, 1 < m → 1 < n → (¬∀ (n : ℕ), f ↑n ≤ 1) → f ↑n ≤ f ↑m ^ Real.logb ↑m ↑n","name":"Rat.MulRingNorm.mulRingNorm_le_mulRingNorm_pow_log","isProp":true,"docString":"Given two natural numbers `n, m` greater than 1 we have `f n ≤ f m ^ logb m n`. ","distance":0.79625806720063907473416975335567258298397064208984375}],["As we are using chain complexes indexed by `ℕ`, we shall need the relation\n`c` such `c m n` if and only if `n+1=m`. ",{"type":"ComplexShape ℕ","name":"AlgebraicTopology.DoldKan.c","isProp":false,"docString":"As we are using chain complexes indexed by `ℕ`, we shall need the relation\n`c` such `c m n` if and only if `n+1=m`. ","distance":0.799347472724873941984924385906197130680084228515625}],["A (positive) natural number `n` is a sum of two squares if and only if the exponent of\nevery prime `q` such that `q % 4 = 3` in the prime factorization of `n` is even.\n(The assumption `0 < n` is not present, since for `n = 0`, both sides are satisfied;\nthe right hand side holds, since `padicValNat q 0 = 0` by definition.) ",{"type":"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∀ {q : ℕ}, Nat.Prime q → q % 4 = 3 → Even (padicValNat q n)","name":"Nat.eq_sq_add_sq_iff","isProp":true,"docString":"A (positive) natural number `n` is a sum of two squares if and only if the exponent of\nevery prime `q` such that `q % 4 = 3` in the prime factorization of `n` is even.\n(The assumption `0 < n` is not present, since for `n = 0`, both sides are satisfied;\nthe right hand side holds, since `padicValNat q 0 = 0` by definition.) ","distance":0.80599487056219742964202623625169508159160614013671875}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.80898581474605946173284110045642592012882232666015625}],["If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'","name":"Nat.exists_eq_pow_mul_and_not_dvd","isProp":true,"docString":"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ","distance":0.8128679199796378096465332419029437005519866943359375}],["The antidiagonal of a natural number `n` is\nthe multiset of pairs `(i, j)` such that `i + j = n`. ",{"type":"ℕ → Multiset (ℕ × ℕ)","name":"Multiset.Nat.antidiagonal","isProp":false,"docString":"The antidiagonal of a natural number `n` is\nthe multiset of pairs `(i, j)` such that `i + j = n`. ","distance":0.8133217182788872179344252799637615680694580078125}],["The antidiagonal of a natural number `n` is\nthe finset of pairs `(i, j)` such that `i + j = n`. ",{"type":"Finset.HasAntidiagonal ℕ","name":"Finset.Nat.instHasAntidiagonal","isProp":false,"docString":"The antidiagonal of a natural number `n` is\nthe finset of pairs `(i, j)` such that `i + j = n`. ","distance":0.81364959904815792324228596044122241437435150146484375}],["If `-1` is a square modulo coprime natural numbers `m` and `n`, then `-1` is also\na square modulo `m*n`. ",{"type":"∀ {m n : ℕ}, m.Coprime n → IsSquare (-1) → IsSquare (-1) → IsSquare (-1)","name":"ZMod.isSquare_neg_one_mul","isProp":true,"docString":"If `-1` is a square modulo coprime natural numbers `m` and `n`, then `-1` is also\na square modulo `m*n`. ","distance":0.81754319029193833756608000840060412883758544921875}],["This tactic tries to prove (in)equalities about `Num`s by transferring them to the `Nat` world and\nthen trying to call `simp`.\n```lean\nexample (n : Num) (m : Num) : n ≤ n + m := by transfer\n```\n",{"type":"Lean.ParserDescr","name":"Num.transfer","isProp":false,"docString":"This tactic tries to prove (in)equalities about `Num`s by transferring them to the `Nat` world and\nthen trying to call `simp`.\n```lean\nexample (n : Num) (m : Num) : n ≤ n + m := by transfer\n```\n","distance":0.820869930703473027477912182803265750408172607421875}],["`Raised n m` means `m` is either equal or one up from `n`. ",{"type":"ℕ → ℕ → Prop","name":"Ordnode.Raised","isProp":false,"docString":"`Raised n m` means `m` is either equal or one up from `n`. ","distance":0.82385098712634441397995033184997737407684326171875}]]