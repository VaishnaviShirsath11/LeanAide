[["A greatest element of a set is the supremum of this set. ",{"type":"∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] {s : Set α} {a : α}, IsGreatest s a → sSup s = a","name":"IsGreatest.csSup_eq","isProp":true,"docString":"A greatest element of a set is the supremum of this set. ","distance":0.343685149987114246794561722708749584853649139404296875}],[" In a partially ordered set with a greatest element, the greatest element is the unique element that is less than or equal to itself.",{"type":"∀ {α : Type u} [inst : PartialOrder α] [inst_1 : OrderTop α] {a : α}, ⊤ ≤ a ↔ a = ⊤","name":"top_le_iff","isProp":true,"docString":" In a partially ordered set with a greatest element, the greatest element is the unique element that is less than or equal to itself.","distance":0.428976233037535237269111121349851600825786590576171875}],["This theorem, `Nat.le_findGreatest`, asserts that for any natural number `m` and a decidable predicate `P` (a predicate for which we can definitively say whether it is true or false), if `m` is less than or equal to `n` and `P(m)` holds true, then `m` is less than or equal to the greatest natural number `i` less than or equal to `n` for which `P(i)` holds. In other words, if `m` satisfies the predicate `P` and is within the bounds of `n`, it cannot be larger than the greatest such number that fulfills these conditions.",{"type":"∀ {m : ℕ} {P : ℕ → Prop} [inst : DecidablePred P] {n : ℕ}, m ≤ n → P m → m ≤ Nat.findGreatest P n","name":"Nat.le_findGreatest","isProp":true,"docString":"This theorem, `Nat.le_findGreatest`, asserts that for any natural number `m` and a decidable predicate `P` (a predicate for which we can definitively say whether it is true or false), if `m` is less than or equal to `n` and `P(m)` holds true, then `m` is less than or equal to the greatest natural number `i` less than or equal to `n` for which `P(i)` holds. In other words, if `m` satisfies the predicate `P` and is within the bounds of `n`, it cannot be larger than the greatest such number that fulfills these conditions.","distance":0.440841001580934477299678064809995703399181365966796875}],["`⊤` is the greatest element ",{"type":"∀ {α : Type u} [self : BooleanAlgebra α] (a : α), a ≤ ⊤","name":"BooleanAlgebra.le_top","isProp":true,"docString":"`⊤` is the greatest element ","distance":0.344978544360600380969117395579814910888671875}],[" In any nontrivial partially ordered set with a least (bottom) and greatest (top) element, the least and greatest elements are distinct.",{"type":"∀ {α : Type u} [inst : PartialOrder α] [inst_1 : BoundedOrder α] [inst_2 : Nontrivial α], ⊥ ≠ ⊤","name":"bot_ne_top","isProp":true,"docString":" In any nontrivial partially ordered set with a least (bottom) and greatest (top) element, the least and greatest elements are distinct.","distance":0.457986832508765651095217208421672694385051727294921875}],["The theorem `Nat.findGreatest_le` states that for any natural number `n` and any decidable predicate `P` on natural numbers, the greatest natural number `i` less than or equal to `n` for which `P(i)` holds is always less than or equal to `n`. If there is no such `i` (i.e., if `P(i)` does not hold for any `i` less than or equal to `n`), then by definition, `Nat.findGreatest P n` is `0`, which is also less than or equal to `n`. This theorem is a property of the `Nat.findGreatest` function in Lean 4, which finds the greatest natural number that satisfies a given predicate.",{"type":"∀ {P : ℕ → Prop} [inst : DecidablePred P] (n : ℕ), Nat.findGreatest P n ≤ n","name":"Nat.findGreatest_le","isProp":true,"docString":"The theorem `Nat.findGreatest_le` states that for any natural number `n` and any decidable predicate `P` on natural numbers, the greatest natural number `i` less than or equal to `n` for which `P(i)` holds is always less than or equal to `n`. If there is no such `i` (i.e., if `P(i)` does not hold for any `i` less than or equal to `n`), then by definition, `Nat.findGreatest P n` is `0`, which is also less than or equal to `n`. This theorem is a property of the `Nat.findGreatest` function in Lean 4, which finds the greatest natural number that satisfies a given predicate.","distance":0.442700451003861517040860462657292373478412628173828125}],["The infimum is the *greatest* lower bound ",{"type":"∀ {α : Type u} [self : Lattice α] (a b c : α), a ≤ b → a ≤ c → a ≤ b ⊓ c","name":"Lattice.le_inf","isProp":true,"docString":"The infimum is the *greatest* lower bound ","distance":0.365711810054597796781905572061077691614627838134765625}],["Largest `b i` ",{"type":"{α : Type u_1} → [inst : Fintype α] → [inst : Nonempty α] → (α → ℝ) → α","name":"AkraBazziRecurrence.max_bi","isProp":false,"docString":"Largest `b i` ","distance":0.373329882887998454332745268402504734694957733154296875}],["The supremum is the *least* upper bound ",{"type":"∀ {α : Type u_5} [self : ConditionallyCompleteLinearOrderedField α] (a b c : α), a ≤ c → b ≤ c → a ⊔ b ≤ c","name":"ConditionallyCompleteLinearOrderedField.sup_le","isProp":true,"docString":"The supremum is the *least* upper bound ","distance":0.37707060245119528030244282490457408130168914794921875}],["The greatest upper set containing a given set. ",{"type":"{α : Type u_1} → [inst : Preorder α] → Set α → UpperSet α","name":"upperClosure","isProp":false,"docString":"The greatest upper set containing a given set. ","distance":0.380706701437720618219628931910847313702106475830078125}],["Greatest common divisor of a finite set ",{"type":"{α : Type u_1} →\n  {β : Type u_2} → [inst : CancelCommMonoidWithZero α] → [inst : NormalizedGCDMonoid α] → Finset β → (β → α) → α","name":"Finset.gcd","isProp":false,"docString":"Greatest common divisor of a finite set ","distance":0.38086059234639668691357883290038444101810455322265625}],["A monotone map sends a greatest element of a set to a greatest element of its image. ",{"type":"∀ {α : Type u} {β : Type v} [inst : Preorder α] [inst_1 : Preorder β] {f : α → β},\n  Monotone f → ∀ {a : α} {s : Set α}, IsGreatest s a → IsGreatest (f '' s) (f a)","name":"Monotone.map_isGreatest","isProp":true,"docString":"A monotone map sends a greatest element of a set to a greatest element of its image. ","distance":0.382791402841393735290154154427000321447849273681640625}],["The supremum of the principal segment ",{"type":"{α : Type u_4} → {β : Type u_5} → {r : α → α → Prop} → {s : β → β → Prop} → r ≺i s → β","name":"PrincipalSeg.top","isProp":false,"docString":"The supremum of the principal segment ","distance":0.39234493226791755660087801516056060791015625}],["Greatest common divisor of a multiset ",{"type":"{α : Type u_1} → [inst : CancelCommMonoidWithZero α] → [inst : NormalizedGCDMonoid α] → Multiset α → α","name":"Multiset.gcd","isProp":false,"docString":"Greatest common divisor of a multiset ","distance":0.393251703430537613570550092845223844051361083984375}],["Maximal elements have maximal grades. ",{"type":"∀ {𝕆 : Type u_5} {α : Type u_6} [inst : Preorder 𝕆] [inst_1 : Preorder α] [self : GradeBoundedOrder 𝕆 α] ⦃a : α⦄,\n  IsMax a → IsMax (GradeOrder.grade a)","name":"GradeBoundedOrder.isMax_grade","isProp":true,"docString":"Maximal elements have maximal grades. ","distance":0.39597354969806375368790440916200168430805206298828125}],["The supremum is continuous ",{"type":"∀ {L : Type u_1} [inst : TopologicalSpace L] [inst_1 : Sup L] [self : ContinuousSup L], Continuous fun p => p.1 ⊔ p.2","name":"ContinuousSup.continuous_sup","isProp":true,"docString":"The supremum is continuous ","distance":0.399621376493749291824997271760366857051849365234375}],["The supremum is an upper bound on the second argument ",{"type":"∀ {α : Type u} [self : SemilatticeSup α] (a b : α), b ≤ a ⊔ b","name":"SemilatticeSup.le_sup_right","isProp":true,"docString":"The supremum is an upper bound on the second argument ","distance":0.4039927515387293777138211225974373519420623779296875}],["An antitone map sends a greatest element of a set to a least element of its image. ",{"type":"∀ {α : Type u} {β : Type v} [inst : Preorder α] [inst_1 : Preorder β] {f : α → β},\n  Antitone f → ∀ {a : α} {s : Set α}, IsGreatest s a → IsLeast (f '' s) (f a)","name":"Antitone.map_isGreatest","isProp":true,"docString":"An antitone map sends a greatest element of a set to a least element of its image. ","distance":0.40399953326520210428185464479611255228519439697265625}],["The supremum is an upper bound on the first argument ",{"type":"∀ {α : Type u} [self : SemilatticeSup α] (a b : α), a ≤ a ⊔ b","name":"SemilatticeSup.le_sup_left","isProp":true,"docString":"The supremum is an upper bound on the first argument ","distance":0.406703037070829720445175325949094258248805999755859375}],["The greatest common divisor between two elements. ",{"type":"{α : Type u_2} → [inst : CancelCommMonoidWithZero α] → [self : GCDMonoid α] → α → α → α","name":"GCDMonoid.gcd","isProp":false,"docString":"The greatest common divisor between two elements. ","distance":0.409036686073558530818417011687415651977062225341796875}],["The supremum of a family of ordinals ",{"type":"{ι : Type u} → (ι → Ordinal.{max u v}) → Ordinal.{max u v}","name":"Ordinal.sup","isProp":false,"docString":"The supremum of a family of ordinals ","distance":0.409719830705262466619132055711816065013408660888671875}],["Greatest lower bound (`\\glb` notation) ",{"type":"{α : Type u_1} → [self : Inf α] → α → α → α","name":"Inf.inf","isProp":false,"docString":"Greatest lower bound (`\\glb` notation) ","distance":0.41046276177832996534533549493062309920787811279296875}],["Supremum of a set ",{"type":"{α : Type u_9} → [self : SupSet α] → Set α → α","name":"SupSet.sSup","isProp":false,"docString":"Supremum of a set ","distance":0.410524186863644391376482190025853924453258514404296875}],["`generate g` is the largest filter containing the sets `g`. ",{"type":"{α : Type u} → Set (Set α) → Filter α","name":"Filter.generate","isProp":false,"docString":"`generate g` is the largest filter containing the sets `g`. ","distance":0.411015730585740979297071362452697940170764923095703125}]]