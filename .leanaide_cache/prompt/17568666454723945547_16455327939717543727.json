[["Use the above equivalence to prove we have a limit. ",{"type":"∀ {J : Type w} {C : Type u} [inst : CategoryTheory.Category.{v, u} C] {B : C}\n  (F : CategoryTheory.Functor (CategoryTheory.Discrete J) (CategoryTheory.Over B))\n  [inst_1 :\n    CategoryTheory.Limits.HasLimit (CategoryTheory.Over.ConstructProducts.widePullbackDiagramOfDiagramOver B F)],\n  CategoryTheory.Limits.HasLimit F","name":"CategoryTheory.Over.ConstructProducts.has_over_limit_discrete_of_widePullback_limit","isProp":true,"docString":"Use the above equivalence to prove we have a limit. ","distance":0.338720306466151088731209028992452658712863922119140625}],[" The limit inferior of the integral of an almost-everywhere measurable sequence of extended nonnegative real-valued functions with respect to a measure is less than or equal to the integral of their limit inferior. In mathematical notation, this is written as:\n\n\\[ \\int_{\\alpha} \\liminf_{n \\to \\infty} f_n(a) \\,d\\mu(a) \\leq \\liminf_{n \\to \\infty} \\int_{\\alpha} f_n(a) \\,d\\mu(a) \\]",{"type":"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal},\n  (∀ (n : ℕ), AEMeasurable (f n) μ) →\n    ∫⁻ (a : α), Filter.liminf (fun n => f n a) Filter.atTop ∂μ ≤\n      Filter.liminf (fun n => ∫⁻ (a : α), f n a ∂μ) Filter.atTop","name":"MeasureTheory.lintegral_liminf_le'","isProp":true,"docString":" The limit inferior of the integral of an almost-everywhere measurable sequence of extended nonnegative real-valued functions with respect to a measure is less than or equal to the integral of their limit inferior. In mathematical notation, this is written as:\n\n\\[ \\int_{\\alpha} \\liminf_{n \\to \\infty} f_n(a) \\,d\\mu(a) \\leq \\liminf_{n \\to \\infty} \\int_{\\alpha} f_n(a) \\,d\\mu(a) \\]","distance":0.38283902737965913587458999245427548885345458984375}],["This theorem asserts that for any positive real number `y`, the function `x ^ (-y)` tends to `0` as `x` approaches positive infinity. In mathematical terms, it says that the limit as `x` tends to `+∞` of `x^(-y)` is `0` for any `y` greater than `0`. This describes how the function behaves at very large values of `x`: as `x` gets larger and larger, `x^(-y)` gets closer and closer to zero, regardless of what positive real value `y` takes.",{"type":"∀ {y : ℝ}, 0 < y → Filter.Tendsto (fun x => x ^ (-y)) Filter.atTop (nhds 0)","name":"tendsto_rpow_neg_atTop","isProp":true,"docString":"This theorem asserts that for any positive real number `y`, the function `x ^ (-y)` tends to `0` as `x` approaches positive infinity. In mathematical terms, it says that the limit as `x` tends to `+∞` of `x^(-y)` is `0` for any `y` greater than `0`. This describes how the function behaves at very large values of `x`: as `x` gets larger and larger, `x^(-y)` gets closer and closer to zero, regardless of what positive real value `y` takes.","distance":0.36743389781977586761030352136003784835338592529296875}],["A Lebesgue Integral from -∞ to y can be expressed as the sum of one from -∞ to 0 and 0 to x ",{"type":"∀ {y z : ℝ} (f : ℝ → ENNReal),\n  z ≤ y → ∫⁻ (x : ℝ) in Set.Iic y, f x = (∫⁻ (x : ℝ) in Set.Iio z, f x) + ∫⁻ (x : ℝ) in Set.Icc z y, f x","name":"lintegral_Iic_eq_lintegral_Iio_add_Icc","isProp":true,"docString":"A Lebesgue Integral from -∞ to y can be expressed as the sum of one from -∞ to 0 and 0 to x ","distance":0.348539587252880311840641525122919119894504547119140625}],[" If $f: (a, \\infty) \\to \\mathbb{R}$, $f'(x)$ exists for all $x \\in (a, \\infty)$, $g: \\operatorname{Im} f \\to E$ is continuous and integrable, and $f$ is continuous, tends to infinity, and has an integrable product derivatives $f'(x) \\cdot (g \\circ f)(x)$, then $\\int_{a}^{\\infty} f'(x) \\cdot (g \\circ f)(x) \\, dx = \\int_{f(a)}^{\\infty} g(u) \\, du$.",{"type":"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f f' : ℝ → ℝ} {g : ℝ → E} {a : ℝ},\n  ContinuousOn f (Set.Ici a) →\n    Filter.Tendsto f Filter.atTop Filter.atTop →\n      (∀ x ∈ Set.Ioi a, HasDerivWithinAt f (f' x) (Set.Ioi x) x) →\n        ContinuousOn g (f '' Set.Ioi a) →\n          MeasureTheory.IntegrableOn g (f '' Set.Ici a) MeasureTheory.volume →\n            MeasureTheory.IntegrableOn (fun x => f' x • (g ∘ f) x) (Set.Ici a) MeasureTheory.volume →\n              ∫ (x : ℝ) in Set.Ioi a, f' x • (g ∘ f) x = ∫ (u : ℝ) in Set.Ioi (f a), g u","name":"MeasureTheory.integral_comp_smul_deriv_Ioi","isProp":true,"docString":" If $f: (a, \\infty) \\to \\mathbb{R}$, $f'(x)$ exists for all $x \\in (a, \\infty)$, $g: \\operatorname{Im} f \\to E$ is continuous and integrable, and $f$ is continuous, tends to infinity, and has an integrable product derivatives $f'(x) \\cdot (g \\circ f)(x)$, then $\\int_{a}^{\\infty} f'(x) \\cdot (g \\circ f)(x) \\, dx = \\int_{f(a)}^{\\infty} g(u) \\, du$.","distance":0.39452339336525199531280350129236467182636260986328125}],["This theorem states that if the expression `(f y - f x) / (y - x)` tends to a certain limit as `y` approaches `x` (possibly only from one side or along certain lines), then the same limiting behavior holds for the expression `(f (y + c * (y - x) ^ 2) - d) / (y - x)`. This is essentially saying that adding a small perturbation `(c * (y - x) ^ 2)` to the argument of `f` in the numerator doesn't change the limiting behavior. This theorem is particularly useful in the study of almost everywhere differentiability of monotone functions, where such perturbations often arise.",{"type":"∀ {f : ℝ → ℝ} {x a c d : ℝ} {l : Filter ℝ},\n  l ≤ nhdsWithin x {x}ᶜ →\n    Filter.Tendsto (fun y => (f y - d) / (y - x)) l (nhds a) →\n      Filter.Tendsto (fun y => y + c * (y - x) ^ 2) l l →\n        Filter.Tendsto (fun y => (f (y + c * (y - x) ^ 2) - d) / (y - x)) l (nhds a)","name":"tendsto_apply_add_mul_sq_div_sub","isProp":true,"docString":"This theorem states that if the expression `(f y - f x) / (y - x)` tends to a certain limit as `y` approaches `x` (possibly only from one side or along certain lines), then the same limiting behavior holds for the expression `(f (y + c * (y - x) ^ 2) - d) / (y - x)`. This is essentially saying that adding a small perturbation `(c * (y - x) ^ 2)` to the argument of `f` in the numerator doesn't change the limiting behavior. This theorem is particularly useful in the study of almost everywhere differentiability of monotone functions, where such perturbations often arise.","distance":0.36980273853103451386914457543753087520599365234375}],["(Impl) Show that the raised cone is a limit. ",{"type":"{J : Type v} →\n  [inst : CategoryTheory.SmallCategory J] →\n    {C : Type u} →\n      [inst_1 : CategoryTheory.Category.{v, u} C] →\n        [inst_2 : CategoryTheory.IsConnected J] →\n          {B : C} →\n            {F : CategoryTheory.Functor J (CategoryTheory.Over B)} →\n              {c : CategoryTheory.Limits.Cone (CategoryTheory.Functor.comp F (CategoryTheory.Over.forget B))} →\n                CategoryTheory.Limits.IsLimit c →\n                  CategoryTheory.Limits.IsLimit (CategoryTheory.Over.CreatesConnected.raiseCone c)","name":"CategoryTheory.Over.CreatesConnected.raisedConeIsLimit","isProp":false,"docString":"(Impl) Show that the raised cone is a limit. ","distance":0.348650234494356336956144559735548682510852813720703125}],["Monotone convergence theorem expressed with limits ",{"type":"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal} {F : α → ENNReal},\n  (∀ (n : ℕ), AEMeasurable (f n)) →\n    (∀ᵐ (x : α) ∂μ, Monotone fun n => f n x) →\n      (∀ᵐ (x : α) ∂μ, Filter.Tendsto (fun n => f n x) Filter.atTop (nhds (F x))) →\n        Filter.Tendsto (fun n => ∫⁻ (x : α), f n x ∂μ) Filter.atTop (nhds (∫⁻ (x : α), F x ∂μ))","name":"MeasureTheory.lintegral_tendsto_of_tendsto_of_monotone","isProp":true,"docString":"Monotone convergence theorem expressed with limits ","distance":0.3586784830283973324327462250948883593082427978515625}],["Euler's limit formula for the complex Gamma function. ",{"type":"∀ (s : ℂ), Filter.Tendsto (Complex.GammaSeq s) Filter.atTop (nhds (Complex.Gamma s))","name":"Complex.GammaSeq_tendsto_Gamma","isProp":true,"docString":"Euler's limit formula for the complex Gamma function. ","distance":0.364036388712681013846150790413958020508289337158203125}],["Euler's limit formula for the real Gamma function. ",{"type":"∀ (s : ℝ), Filter.Tendsto (Real.GammaSeq s) Filter.atTop (nhds (Real.Gamma s))","name":"Real.GammaSeq_tendsto_Gamma","isProp":true,"docString":"Euler's limit formula for the real Gamma function. ","distance":0.367523201130258214686108431124011985957622528076171875}],["Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. ",{"type":"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑k ^ p * (algebraMap ℚ A) (↑(Nat.factorial p))⁻¹","name":"PowerSeries.exp_pow_sum","isProp":true,"docString":"Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. ","distance":0.37201802985371912324552567952196113765239715576171875}],["Shows that $e^{x} * e^{-x} = 1$ ",{"type":"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A],\n  PowerSeries.exp A * PowerSeries.evalNegHom (PowerSeries.exp A) = 1","name":"PowerSeries.exp_mul_exp_neg_eq_one","isProp":true,"docString":"Shows that $e^{x} * e^{-x} = 1$ ","distance":0.372237712132020004407451096994918771088123321533203125}],["The proof that is the limit cone ",{"type":"{J : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} J] →\n    {C : Type u} →\n      [inst_1 : CategoryTheory.Category.{v, u} C] →\n        {F : CategoryTheory.Functor J C} →\n          (self : CategoryTheory.Limits.LimitCone F) → CategoryTheory.Limits.IsLimit self.cone","name":"CategoryTheory.Limits.LimitCone.isLimit","isProp":false,"docString":"The proof that is the limit cone ","distance":0.372449942956187662890243927904521115124225616455078125}],["Show the equalizing cocone is a colimit ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    [inst_1 : CategoryTheory.Limits.HasBinaryCoproducts C] →\n      [inst_2 : CategoryTheory.Limits.HasPushouts C] →\n        (F : CategoryTheory.Functor CategoryTheory.Limits.WalkingParallelPair C) →\n          CategoryTheory.Limits.IsColimit\n            (CategoryTheory.Limits.HasCoequalizersOfHasPushoutsAndBinaryCoproducts.coequalizerCocone F)","name":"CategoryTheory.Limits.HasCoequalizersOfHasPushoutsAndBinaryCoproducts.coequalizerCoconeIsColimit","isProp":false,"docString":"Show the equalizing cocone is a colimit ","distance":0.38151989265181551758132627583108842372894287109375}],["(Impl) Prove that the lifted cone is limiting. ",{"type":"{C : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} C] →\n    {T : CategoryTheory.Monad C} →\n      {J : Type u} →\n        [inst_1 : CategoryTheory.Category.{v, u} J] →\n          (D : CategoryTheory.Functor J (CategoryTheory.Monad.Algebra T)) →\n            (c : CategoryTheory.Limits.Cone (CategoryTheory.Functor.comp D (CategoryTheory.Monad.forget T))) →\n              (t : CategoryTheory.Limits.IsLimit c) →\n                CategoryTheory.Limits.IsLimit (CategoryTheory.Monad.ForgetCreatesLimits.liftedCone D c t)","name":"CategoryTheory.Monad.ForgetCreatesLimits.liftedConeIsLimit","isProp":false,"docString":"(Impl) Prove that the lifted cone is limiting. ","distance":0.382742352343058200858649797737598419189453125}],["A convenient way to show that a binary fan is a limit. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    {X Y : C} →\n      (s : CategoryTheory.Limits.BinaryFan X Y) →\n        (lift : {T : C} → (T ⟶ X) → (T ⟶ Y) → (T ⟶ s.pt)) →\n          (∀ {T : C} (f : T ⟶ X) (g : T ⟶ Y),\n              CategoryTheory.CategoryStruct.comp (lift f g) (CategoryTheory.Limits.BinaryFan.fst s) = f) →\n            (∀ {T : C} (f : T ⟶ X) (g : T ⟶ Y),\n                CategoryTheory.CategoryStruct.comp (lift f g) (CategoryTheory.Limits.BinaryFan.snd s) = g) →\n              (∀ {T : C} (f : T ⟶ X) (g : T ⟶ Y) (m : T ⟶ s.pt),\n                  CategoryTheory.CategoryStruct.comp m (CategoryTheory.Limits.BinaryFan.fst s) = f →\n                    CategoryTheory.CategoryStruct.comp m (CategoryTheory.Limits.BinaryFan.snd s) = g → m = lift f g) →\n                CategoryTheory.Limits.IsLimit s","name":"CategoryTheory.Limits.BinaryFan.IsLimit.mk","isProp":false,"docString":"A convenient way to show that a binary fan is a limit. ","distance":0.384333126731730978509204987858538515865802764892578125}],["The limit of a Cauchy sequence of complex numbers. ",{"type":"CauSeq ℂ ⇑Complex.abs → ℂ","name":"Complex.limAux","isProp":false,"docString":"The limit of a Cauchy sequence of complex numbers. ","distance":0.38433923394403224360615922705619595944881439208984375}],["Show the equalizing cone is a limit ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    [inst_1 : CategoryTheory.Limits.HasBinaryProducts C] →\n      [inst_2 : CategoryTheory.Limits.HasPullbacks C] →\n        (F : CategoryTheory.Functor CategoryTheory.Limits.WalkingParallelPair C) →\n          CategoryTheory.Limits.IsLimit\n            (CategoryTheory.Limits.HasEqualizersOfHasPullbacksAndBinaryProducts.equalizerCone F)","name":"CategoryTheory.Limits.HasEqualizersOfHasPullbacksAndBinaryProducts.equalizerConeIsLimit","isProp":false,"docString":"Show the equalizing cone is a limit ","distance":0.385553015073491545106065814252360723912715911865234375}],["$\\lim_{x\\to+\\infty}|x|=+\\infty$ ",{"type":"∀ {α : Type u_3} [inst : LinearOrderedAddCommGroup α], Filter.Tendsto abs Filter.atTop Filter.atTop","name":"Filter.tendsto_abs_atTop_atTop","isProp":true,"docString":"$\\lim_{x\\to+\\infty}|x|=+\\infty$ ","distance":0.388548397651820975884362496799440123140811920166015625}],["Every Cauchy sequence has a limit. ",{"type":"∀ {α : Type u_1} [inst : LinearOrderedField α] {β : Type u_2} [inst_1 : Ring β] {abv : β → α}\n  [inst_2 : IsAbsoluteValue abv] [self : CauSeq.IsComplete β abv] (s : CauSeq β abv), ∃ b, s ≈ CauSeq.const abv b","name":"CauSeq.IsComplete.isComplete","isProp":true,"docString":"Every Cauchy sequence has a limit. ","distance":0.39042959804443311266908267498365603387355804443359375}],["If `(f y - f x) / (y - x)` converges to a limit as `y` tends to `x`, then the same goes if\n`y` is shifted a little bit, i.e., `f (y + (y-x)^2) - f x) / (y - x)` converges to the same limit.\nThis lemma contains a slightly more general version of this statement (where one considers\nconvergence along some subfilter, typically `𝓝[<] x` or `𝓝[>] x`) tailored to the application\nto almost everywhere differentiability of monotone functions. ",{"type":"∀ {f : ℝ → ℝ} {x a c d : ℝ} {l : Filter ℝ},\n  l ≤ nhdsWithin x {x}ᶜ →\n    Filter.Tendsto (fun y => (f y - d) / (y - x)) l (nhds a) →\n      Filter.Tendsto (fun y => y + c * (y - x) ^ 2) l l →\n        Filter.Tendsto (fun y => (f (y + c * (y - x) ^ 2) - d) / (y - x)) l (nhds a)","name":"tendsto_apply_add_mul_sq_div_sub","isProp":true,"docString":"If `(f y - f x) / (y - x)` converges to a limit as `y` tends to `x`, then the same goes if\n`y` is shifted a little bit, i.e., `f (y + (y-x)^2) - f x) / (y - x)` converges to the same limit.\nThis lemma contains a slightly more general version of this statement (where one considers\nconvergence along some subfilter, typically `𝓝[<] x` or `𝓝[>] x`) tailored to the application\nto almost everywhere differentiability of monotone functions. ","distance":0.39211562671340605135128498659469187259674072265625}],["The proof that it is the colimit cocone ",{"type":"{J : Type u₁} →\n  [inst : CategoryTheory.Category.{v₁, u₁} J] →\n    {C : Type u} →\n      [inst_1 : CategoryTheory.Category.{v, u} C] →\n        {F : CategoryTheory.Functor J C} →\n          (self : CategoryTheory.Limits.ColimitCocone F) → CategoryTheory.Limits.IsColimit self.cocone","name":"CategoryTheory.Limits.ColimitCocone.isColimit","isProp":false,"docString":"The proof that it is the colimit cocone ","distance":0.39222880481020416798543237746343947947025299072265625}],["The theorem that $(e^X - 1) * ∑ Bₙ(t)* X^n/n! = Xe^{tX}$ ",{"type":"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (t : A),\n  (PowerSeries.mk fun n => (Polynomial.aeval t) ((1 / ↑(Nat.factorial n)) • Polynomial.bernoulli n)) *\n      (PowerSeries.exp A - 1) =\n    PowerSeries.X * (PowerSeries.rescale t) (PowerSeries.exp A)","name":"Polynomial.bernoulli_generating_function","isProp":true,"docString":"The theorem that $(e^X - 1) * ∑ Bₙ(t)* X^n/n! = Xe^{tX}$ ","distance":0.392355328502473621465895803339662961661815643310546875}],["A uniformly Cauchy sequence converges uniformly to its limit ",{"type":"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\n  {p' : Filter α} [inst_1 : Filter.NeBot p],\n  UniformCauchySeqOnFilter F p p' →\n    (∀ᶠ (x : α) in p', Filter.Tendsto (fun n => F n x) p (nhds (f x))) → TendstoUniformlyOnFilter F f p p'","name":"UniformCauchySeqOnFilter.tendstoUniformlyOnFilter_of_tendsto","isProp":true,"docString":"A uniformly Cauchy sequence converges uniformly to its limit ","distance":0.392460291521881277088112938145059160888195037841796875}]]